{
	"id": "02254adbbeba43681387f72977eb45e6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.11",
	"solcLongVersion": "0.8.11+commit.d7f03943",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/17_ReceiveTokenContract.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract ReceiveTokenContract{\n    IERC20 myToken;\n\n    constructor(address _tokenAddress){\n        myToken=IERC20(_tokenAddress);//将一个此接口的实现类实例地址传进来\n    }\n\n    //将代币转移到此合约\n    //这里转账不能直接转账，需要我们的账户在币的合约那边给此合约一个授权额度，才能把钱转到此合约\n    function transferFrom(uint _amount) public{\n        myToken.transferFrom(msg.sender,address(this),_amount);\n    }\n\n    function getBalance(address _address) public view returns(uint){\n        return myToken.balanceOf(_address);\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/17_ReceiveTokenContract.sol": {
				"ReceiveTokenContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/17_ReceiveTokenContract.sol\":128:734  contract ReceiveTokenContract{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/17_ReceiveTokenContract.sol\":184:317  constructor(address _tokenAddress){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/17_ReceiveTokenContract.sol\":243:256  _tokenAddress */\n  dup1\n    /* \"contracts/17_ReceiveTokenContract.sol\":228:235  myToken */\n  0x00\n  dup1\n    /* \"contracts/17_ReceiveTokenContract.sol\":228:257  myToken=IERC20(_tokenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/17_ReceiveTokenContract.sol\":184:317  constructor(address _tokenAddress){... */\n  pop\n    /* \"contracts/17_ReceiveTokenContract.sol\":128:734  contract ReceiveTokenContract{... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/17_ReceiveTokenContract.sol\":128:734  contract ReceiveTokenContract{... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/17_ReceiveTokenContract.sol\":128:734  contract ReceiveTokenContract{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x77a11f7e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xf8b2cb4f\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/17_ReceiveTokenContract.sol\":499:612  function transferFrom(uint _amount) public{... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      stop\n        /* \"contracts/17_ReceiveTokenContract.sol\":618:732  function getBalance(address _address) public view returns(uint){... */\n    tag_4:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/17_ReceiveTokenContract.sol\":499:612  function transferFrom(uint _amount) public{... */\n    tag_8:\n        /* \"contracts/17_ReceiveTokenContract.sol\":551:558  myToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/17_ReceiveTokenContract.sol\":551:571  myToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/17_ReceiveTokenContract.sol\":572:582  msg.sender */\n      caller\n        /* \"contracts/17_ReceiveTokenContract.sol\":591:595  this */\n      address\n        /* \"contracts/17_ReceiveTokenContract.sol\":597:604  _amount */\n      dup5\n        /* \"contracts/17_ReceiveTokenContract.sol\":551:605  myToken.transferFrom(msg.sender,address(this),_amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_16\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_19\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_19:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      pop\n        /* \"contracts/17_ReceiveTokenContract.sol\":499:612  function transferFrom(uint _amount) public{... */\n      pop\n      jump\t// out\n        /* \"contracts/17_ReceiveTokenContract.sol\":618:732  function getBalance(address _address) public view returns(uint){... */\n    tag_12:\n        /* \"contracts/17_ReceiveTokenContract.sol\":676:680  uint */\n      0x00\n        /* \"contracts/17_ReceiveTokenContract.sol\":698:705  myToken */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/17_ReceiveTokenContract.sol\":698:715  myToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/17_ReceiveTokenContract.sol\":716:724  _address */\n      dup4\n        /* \"contracts/17_ReceiveTokenContract.sol\":698:725  myToken.balanceOf(_address) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_26\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_26:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n        /* \"contracts/17_ReceiveTokenContract.sol\":691:725  return myToken.balanceOf(_address) */\n      swap1\n      pop\n        /* \"contracts/17_ReceiveTokenContract.sol\":618:732  function getBalance(address _address) public view returns(uint){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_30:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_32:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_33:\n        /* \"#utility.yul\":490:514   */\n      tag_51\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_32\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_52\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_52:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_34:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_54\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_33\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_7:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_57\n      tag_30\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":766:885   */\n    tag_56:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_58\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_34\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1151   */\n    tag_35:\n        /* \"#utility.yul\":1062:1069   */\n      0x00\n        /* \"#utility.yul\":1102:1144   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1095:1100   */\n      dup3\n        /* \"#utility.yul\":1091:1145   */\n      and\n        /* \"#utility.yul\":1080:1145   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1157:1253   */\n    tag_36:\n        /* \"#utility.yul\":1194:1201   */\n      0x00\n        /* \"#utility.yul\":1223:1247   */\n      tag_61\n        /* \"#utility.yul\":1241:1246   */\n      dup3\n        /* \"#utility.yul\":1223:1247   */\n      tag_35\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1212:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1157:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1381   */\n    tag_37:\n        /* \"#utility.yul\":1332:1356   */\n      tag_63\n        /* \"#utility.yul\":1350:1355   */\n      dup2\n        /* \"#utility.yul\":1332:1356   */\n      tag_36\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1325:1330   */\n      dup2\n        /* \"#utility.yul\":1322:1357   */\n      eq\n        /* \"#utility.yul\":1312:1375   */\n      tag_64\n      jumpi\n        /* \"#utility.yul\":1371:1372   */\n      0x00\n        /* \"#utility.yul\":1368:1369   */\n      dup1\n        /* \"#utility.yul\":1361:1373   */\n      revert\n        /* \"#utility.yul\":1312:1375   */\n    tag_64:\n        /* \"#utility.yul\":1259:1381   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1526   */\n    tag_38:\n        /* \"#utility.yul\":1433:1438   */\n      0x00\n        /* \"#utility.yul\":1471:1477   */\n      dup2\n        /* \"#utility.yul\":1458:1478   */\n      calldataload\n        /* \"#utility.yul\":1449:1478   */\n      swap1\n      pop\n        /* \"#utility.yul\":1487:1520   */\n      tag_66\n        /* \"#utility.yul\":1514:1519   */\n      dup2\n        /* \"#utility.yul\":1487:1520   */\n      tag_37\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":1387:1526   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1532:1861   */\n    tag_11:\n        /* \"#utility.yul\":1591:1597   */\n      0x00\n        /* \"#utility.yul\":1640:1642   */\n      0x20\n        /* \"#utility.yul\":1628:1637   */\n      dup3\n        /* \"#utility.yul\":1619:1626   */\n      dup5\n        /* \"#utility.yul\":1615:1638   */\n      sub\n        /* \"#utility.yul\":1611:1643   */\n      slt\n        /* \"#utility.yul\":1608:1727   */\n      iszero\n      tag_68\n      jumpi\n        /* \"#utility.yul\":1646:1725   */\n      tag_69\n      tag_30\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1608:1727   */\n    tag_68:\n        /* \"#utility.yul\":1766:1767   */\n      0x00\n        /* \"#utility.yul\":1791:1844   */\n      tag_70\n        /* \"#utility.yul\":1836:1843   */\n      dup5\n        /* \"#utility.yul\":1827:1833   */\n      dup3\n        /* \"#utility.yul\":1816:1825   */\n      dup6\n        /* \"#utility.yul\":1812:1834   */\n      add\n        /* \"#utility.yul\":1791:1844   */\n      tag_38\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1781:1844   */\n      swap2\n      pop\n        /* \"#utility.yul\":1737:1854   */\n      pop\n        /* \"#utility.yul\":1532:1861   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1867:1985   */\n    tag_39:\n        /* \"#utility.yul\":1954:1978   */\n      tag_72\n        /* \"#utility.yul\":1972:1977   */\n      dup2\n        /* \"#utility.yul\":1954:1978   */\n      tag_32\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1949:1952   */\n      dup3\n        /* \"#utility.yul\":1942:1979   */\n      mstore\n        /* \"#utility.yul\":1867:1985   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1991:2213   */\n    tag_14:\n        /* \"#utility.yul\":2084:2088   */\n      0x00\n        /* \"#utility.yul\":2122:2124   */\n      0x20\n        /* \"#utility.yul\":2111:2120   */\n      dup3\n        /* \"#utility.yul\":2107:2125   */\n      add\n        /* \"#utility.yul\":2099:2125   */\n      swap1\n      pop\n        /* \"#utility.yul\":2135:2206   */\n      tag_74\n        /* \"#utility.yul\":2203:2204   */\n      0x00\n        /* \"#utility.yul\":2192:2201   */\n      dup4\n        /* \"#utility.yul\":2188:2205   */\n      add\n        /* \"#utility.yul\":2179:2185   */\n      dup5\n        /* \"#utility.yul\":2135:2206   */\n      tag_39\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1991:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2337   */\n    tag_40:\n        /* \"#utility.yul\":2306:2330   */\n      tag_76\n        /* \"#utility.yul\":2324:2329   */\n      dup2\n        /* \"#utility.yul\":2306:2330   */\n      tag_36\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2301:2304   */\n      dup3\n        /* \"#utility.yul\":2294:2331   */\n      mstore\n        /* \"#utility.yul\":2219:2337   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2343:2785   */\n    tag_17:\n        /* \"#utility.yul\":2492:2496   */\n      0x00\n        /* \"#utility.yul\":2530:2532   */\n      0x60\n        /* \"#utility.yul\":2519:2528   */\n      dup3\n        /* \"#utility.yul\":2515:2533   */\n      add\n        /* \"#utility.yul\":2507:2533   */\n      swap1\n      pop\n        /* \"#utility.yul\":2543:2614   */\n      tag_78\n        /* \"#utility.yul\":2611:2612   */\n      0x00\n        /* \"#utility.yul\":2600:2609   */\n      dup4\n        /* \"#utility.yul\":2596:2613   */\n      add\n        /* \"#utility.yul\":2587:2593   */\n      dup7\n        /* \"#utility.yul\":2543:2614   */\n      tag_40\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":2624:2696   */\n      tag_79\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup4\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2668:2674   */\n      dup6\n        /* \"#utility.yul\":2624:2696   */\n      tag_40\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":2706:2778   */\n      tag_80\n        /* \"#utility.yul\":2774:2776   */\n      0x40\n        /* \"#utility.yul\":2763:2772   */\n      dup4\n        /* \"#utility.yul\":2759:2777   */\n      add\n        /* \"#utility.yul\":2750:2756   */\n      dup5\n        /* \"#utility.yul\":2706:2778   */\n      tag_39\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2343:2785   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2791:2881   */\n    tag_41:\n        /* \"#utility.yul\":2825:2832   */\n      0x00\n        /* \"#utility.yul\":2868:2873   */\n      dup2\n        /* \"#utility.yul\":2861:2874   */\n      iszero\n        /* \"#utility.yul\":2854:2875   */\n      iszero\n        /* \"#utility.yul\":2843:2875   */\n      swap1\n      pop\n        /* \"#utility.yul\":2791:2881   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2887:3003   */\n    tag_42:\n        /* \"#utility.yul\":2957:2978   */\n      tag_83\n        /* \"#utility.yul\":2972:2977   */\n      dup2\n        /* \"#utility.yul\":2957:2978   */\n      tag_41\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":2950:2955   */\n      dup2\n        /* \"#utility.yul\":2947:2979   */\n      eq\n        /* \"#utility.yul\":2937:2997   */\n      tag_84\n      jumpi\n        /* \"#utility.yul\":2993:2994   */\n      0x00\n        /* \"#utility.yul\":2990:2991   */\n      dup1\n        /* \"#utility.yul\":2983:2995   */\n      revert\n        /* \"#utility.yul\":2937:2997   */\n    tag_84:\n        /* \"#utility.yul\":2887:3003   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3009:3146   */\n    tag_43:\n        /* \"#utility.yul\":3063:3068   */\n      0x00\n        /* \"#utility.yul\":3094:3100   */\n      dup2\n        /* \"#utility.yul\":3088:3101   */\n      mload\n        /* \"#utility.yul\":3079:3101   */\n      swap1\n      pop\n        /* \"#utility.yul\":3110:3140   */\n      tag_86\n        /* \"#utility.yul\":3134:3139   */\n      dup2\n        /* \"#utility.yul\":3110:3140   */\n      tag_42\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":3009:3146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3152:3497   */\n    tag_21:\n        /* \"#utility.yul\":3219:3225   */\n      0x00\n        /* \"#utility.yul\":3268:3270   */\n      0x20\n        /* \"#utility.yul\":3256:3265   */\n      dup3\n        /* \"#utility.yul\":3247:3254   */\n      dup5\n        /* \"#utility.yul\":3243:3266   */\n      sub\n        /* \"#utility.yul\":3239:3271   */\n      slt\n        /* \"#utility.yul\":3236:3355   */\n      iszero\n      tag_88\n      jumpi\n        /* \"#utility.yul\":3274:3353   */\n      tag_89\n      tag_30\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":3236:3355   */\n    tag_88:\n        /* \"#utility.yul\":3394:3395   */\n      0x00\n        /* \"#utility.yul\":3419:3480   */\n      tag_90\n        /* \"#utility.yul\":3472:3479   */\n      dup5\n        /* \"#utility.yul\":3463:3469   */\n      dup3\n        /* \"#utility.yul\":3452:3461   */\n      dup6\n        /* \"#utility.yul\":3448:3470   */\n      add\n        /* \"#utility.yul\":3419:3480   */\n      tag_43\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":3409:3480   */\n      swap2\n      pop\n        /* \"#utility.yul\":3365:3490   */\n      pop\n        /* \"#utility.yul\":3152:3497   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3503:3725   */\n    tag_24:\n        /* \"#utility.yul\":3596:3600   */\n      0x00\n        /* \"#utility.yul\":3634:3636   */\n      0x20\n        /* \"#utility.yul\":3623:3632   */\n      dup3\n        /* \"#utility.yul\":3619:3637   */\n      add\n        /* \"#utility.yul\":3611:3637   */\n      swap1\n      pop\n        /* \"#utility.yul\":3647:3718   */\n      tag_92\n        /* \"#utility.yul\":3715:3716   */\n      0x00\n        /* \"#utility.yul\":3704:3713   */\n      dup4\n        /* \"#utility.yul\":3700:3717   */\n      add\n        /* \"#utility.yul\":3691:3697   */\n      dup5\n        /* \"#utility.yul\":3647:3718   */\n      tag_40\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":3503:3725   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3731:3874   */\n    tag_44:\n        /* \"#utility.yul\":3788:3793   */\n      0x00\n        /* \"#utility.yul\":3819:3825   */\n      dup2\n        /* \"#utility.yul\":3813:3826   */\n      mload\n        /* \"#utility.yul\":3804:3826   */\n      swap1\n      pop\n        /* \"#utility.yul\":3835:3868   */\n      tag_94\n        /* \"#utility.yul\":3862:3867   */\n      dup2\n        /* \"#utility.yul\":3835:3868   */\n      tag_33\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":3731:3874   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3880:4231   */\n    tag_28:\n        /* \"#utility.yul\":3950:3956   */\n      0x00\n        /* \"#utility.yul\":3999:4001   */\n      0x20\n        /* \"#utility.yul\":3987:3996   */\n      dup3\n        /* \"#utility.yul\":3978:3985   */\n      dup5\n        /* \"#utility.yul\":3974:3997   */\n      sub\n        /* \"#utility.yul\":3970:4002   */\n      slt\n        /* \"#utility.yul\":3967:4086   */\n      iszero\n      tag_96\n      jumpi\n        /* \"#utility.yul\":4005:4084   */\n      tag_97\n      tag_30\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":3967:4086   */\n    tag_96:\n        /* \"#utility.yul\":4125:4126   */\n      0x00\n        /* \"#utility.yul\":4150:4214   */\n      tag_98\n        /* \"#utility.yul\":4206:4213   */\n      dup5\n        /* \"#utility.yul\":4197:4203   */\n      dup3\n        /* \"#utility.yul\":4186:4195   */\n      dup6\n        /* \"#utility.yul\":4182:4204   */\n      add\n        /* \"#utility.yul\":4150:4214   */\n      tag_44\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":4140:4214   */\n      swap2\n      pop\n        /* \"#utility.yul\":4096:4224   */\n      pop\n        /* \"#utility.yul\":3880:4231   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202b00666b44003baf6b446bba689d03d8d20266995982c1d74d12901004956d7264736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_95": {
									"entryPoint": null,
									"id": 95,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 120,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:2",
														"type": ""
													}
												],
												"src": "466:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:2"
															},
															"nodeType": "YulIf",
															"src": "621:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:2",
														"type": ""
													}
												],
												"src": "568:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:2",
														"type": ""
													}
												],
												"src": "696:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:2"
															},
															"nodeType": "YulIf",
															"src": "932:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:2",
														"type": ""
													}
												],
												"src": "845:351:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610541380380610541833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b61042a806101176000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806377a11f7e1461003b578063f8b2cb4f14610057575b600080fd5b6100556004803603810190610050919061020a565b610087565b005b610071600480360381019061006c9190610295565b61012b565b60405161007e91906102d1565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016100e4939291906102fb565b6020604051808303816000875af1158015610103573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610127919061036a565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b81526004016101879190610397565b602060405180830381865afa1580156101a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c891906103c7565b9050919050565b600080fd5b6000819050919050565b6101e7816101d4565b81146101f257600080fd5b50565b600081359050610204816101de565b92915050565b6000602082840312156102205761021f6101cf565b5b600061022e848285016101f5565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061026282610237565b9050919050565b61027281610257565b811461027d57600080fd5b50565b60008135905061028f81610269565b92915050565b6000602082840312156102ab576102aa6101cf565b5b60006102b984828501610280565b91505092915050565b6102cb816101d4565b82525050565b60006020820190506102e660008301846102c2565b92915050565b6102f581610257565b82525050565b600060608201905061031060008301866102ec565b61031d60208301856102ec565b61032a60408301846102c2565b949350505050565b60008115159050919050565b61034781610332565b811461035257600080fd5b50565b6000815190506103648161033e565b92915050565b6000602082840312156103805761037f6101cf565b5b600061038e84828501610355565b91505092915050565b60006020820190506103ac60008301846102ec565b92915050565b6000815190506103c1816101de565b92915050565b6000602082840312156103dd576103dc6101cf565b5b60006103eb848285016103b2565b9150509291505056fea26469706673582212202b00666b44003baf6b446bba689d03d8d20266995982c1d74d12901004956d7264736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x541 CODESIZE SUB DUP1 PUSH2 0x541 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xDB JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x108 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA8 DUP3 PUSH2 0x7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB8 DUP2 PUSH2 0x9D JUMP JUMPDEST DUP2 EQ PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD5 DUP2 PUSH2 0xAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1 JUMPI PUSH2 0xF0 PUSH2 0x78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFF DUP5 DUP3 DUP6 ADD PUSH2 0xC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x42A DUP1 PUSH2 0x117 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x77A11F7E EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x20A JUMP JUMPDEST PUSH2 0x87 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x71 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x295 JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7E SWAP2 SWAP1 PUSH2 0x2D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x103 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x36A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x187 SWAP2 SWAP1 PUSH2 0x397 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x3C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E7 DUP2 PUSH2 0x1D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x204 DUP2 PUSH2 0x1DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x220 JUMPI PUSH2 0x21F PUSH2 0x1CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22E DUP5 DUP3 DUP6 ADD PUSH2 0x1F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x262 DUP3 PUSH2 0x237 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x272 DUP2 PUSH2 0x257 JUMP JUMPDEST DUP2 EQ PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28F DUP2 PUSH2 0x269 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AB JUMPI PUSH2 0x2AA PUSH2 0x1CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B9 DUP5 DUP3 DUP6 ADD PUSH2 0x280 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2CB DUP2 PUSH2 0x1D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F5 DUP2 PUSH2 0x257 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x310 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2EC JUMP JUMPDEST PUSH2 0x31D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2EC JUMP JUMPDEST PUSH2 0x32A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2C2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x347 DUP2 PUSH2 0x332 JUMP JUMPDEST DUP2 EQ PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x364 DUP2 PUSH2 0x33E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x380 JUMPI PUSH2 0x37F PUSH2 0x1CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38E DUP5 DUP3 DUP6 ADD PUSH2 0x355 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3AC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3C1 DUP2 PUSH2 0x1DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3DD JUMPI PUSH2 0x3DC PUSH2 0x1CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3EB DUP5 DUP3 DUP6 ADD PUSH2 0x3B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B STOP PUSH7 0x6B44003BAF6B44 PUSH12 0xBA689D03D8D20266995982C1 0xD7 0x4D SLT SWAP1 LT DIV SWAP6 PUSH14 0x7264736F6C634300080B00330000 ",
							"sourceMap": "128:606:1:-:0;;;184:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;243:13;228:7;;:29;;;;;;;;;;;;;;;;;;184:133;128:606;;88:117:2;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;128:606:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getBalance_126": {
									"entryPoint": 299,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_113": {
									"entryPoint": 135,
									"id": 113,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 763,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 463,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4234:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:2"
															},
															"nodeType": "YulIf",
															"src": "470:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:2",
														"type": ""
													}
												],
												"src": "417:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:2",
														"type": ""
													}
												],
												"src": "545:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:2"
															},
															"nodeType": "YulIf",
															"src": "766:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:2",
														"type": ""
													}
												],
												"src": "690:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1070:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1080:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1095:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1102:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1091:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1080:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1052:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1062:7:2",
														"type": ""
													}
												],
												"src": "1025:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1241:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1223:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1223:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1212:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1184:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1194:7:2",
														"type": ""
													}
												],
												"src": "1157:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1302:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1359:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1368:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1361:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1361:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1361:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1325:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1350:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1332:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1332:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1322:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1322:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:43:2"
															},
															"nodeType": "YulIf",
															"src": "1312:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1295:5:2",
														"type": ""
													}
												],
												"src": "1259:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1439:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1449:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1471:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1458:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1458:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1449:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1514:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1487:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1487:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1487:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1417:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1425:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1433:5:2",
														"type": ""
													}
												],
												"src": "1387:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1598:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1644:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1646:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1646:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1646:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1619:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1628:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1615:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1615:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1640:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1611:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:32:2"
															},
															"nodeType": "YulIf",
															"src": "1608:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1737:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1752:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1766:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1756:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1781:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1816:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1827:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1812:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1812:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1836:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1791:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1791:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1781:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1568:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1579:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1591:6:2",
														"type": ""
													}
												],
												"src": "1532:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1932:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1949:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1972:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1954:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1954:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1942:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1942:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1942:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1920:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1927:3:2",
														"type": ""
													}
												],
												"src": "1867:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2089:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2099:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2111:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2122:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2107:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2107:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2099:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2179:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2192:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2203:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2188:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2188:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2135:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2135:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2135:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2061:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2073:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2084:4:2",
														"type": ""
													}
												],
												"src": "1991:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2284:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2301:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2324:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2306:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2306:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2294:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2294:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2272:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2279:3:2",
														"type": ""
													}
												],
												"src": "2219:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2497:288:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2507:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2519:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2530:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2515:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2515:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2507:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2587:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2600:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2611:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2596:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2596:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2543:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2543:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2543:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2668:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2681:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2692:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2677:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2677:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2624:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2624:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2624:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2750:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2763:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2774:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2759:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2759:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2706:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2706:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2706:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2453:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2465:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2473:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2481:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2492:4:2",
														"type": ""
													}
												],
												"src": "2343:442:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2833:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2843:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2868:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2861:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2861:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2854:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2854:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2843:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2815:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2825:7:2",
														"type": ""
													}
												],
												"src": "2791:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2927:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2981:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2990:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2993:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2983:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2983:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2983:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2950:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2972:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2957:14:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2957:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2947:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2947:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2940:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2940:40:2"
															},
															"nodeType": "YulIf",
															"src": "2937:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2920:5:2",
														"type": ""
													}
												],
												"src": "2887:116:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3069:77:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3079:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3094:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3088:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3088:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3079:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3134:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "3110:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3110:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3110:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3047:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3055:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3063:5:2",
														"type": ""
													}
												],
												"src": "3009:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3226:271:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3272:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3274:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3274:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3274:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3247:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3256:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3243:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3243:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3268:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3239:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3239:32:2"
															},
															"nodeType": "YulIf",
															"src": "3236:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "3365:125:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3380:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3394:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3384:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3409:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3452:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3463:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3448:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3448:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3472:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3419:28:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3419:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3409:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3196:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3207:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3219:6:2",
														"type": ""
													}
												],
												"src": "3152:345:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3601:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3611:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3623:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3634:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3619:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3619:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3611:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3691:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3704:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3715:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3700:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3700:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3647:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3647:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3647:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3573:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3585:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3596:4:2",
														"type": ""
													}
												],
												"src": "3503:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3794:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3804:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3819:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3813:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3813:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3804:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3862:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3835:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3835:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3835:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3772:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3780:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3788:5:2",
														"type": ""
													}
												],
												"src": "3731:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3957:274:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4003:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4005:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4005:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4005:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3978:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3987:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3974:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3974:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3999:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3970:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3970:32:2"
															},
															"nodeType": "YulIf",
															"src": "3967:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "4096:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4111:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4125:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4115:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4140:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4186:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4197:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4182:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4182:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4206:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4150:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4150:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4140:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3927:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3938:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3950:6:2",
														"type": ""
													}
												],
												"src": "3880:351:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806377a11f7e1461003b578063f8b2cb4f14610057575b600080fd5b6100556004803603810190610050919061020a565b610087565b005b610071600480360381019061006c9190610295565b61012b565b60405161007e91906102d1565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016100e4939291906102fb565b6020604051808303816000875af1158015610103573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610127919061036a565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b81526004016101879190610397565b602060405180830381865afa1580156101a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c891906103c7565b9050919050565b600080fd5b6000819050919050565b6101e7816101d4565b81146101f257600080fd5b50565b600081359050610204816101de565b92915050565b6000602082840312156102205761021f6101cf565b5b600061022e848285016101f5565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061026282610237565b9050919050565b61027281610257565b811461027d57600080fd5b50565b60008135905061028f81610269565b92915050565b6000602082840312156102ab576102aa6101cf565b5b60006102b984828501610280565b91505092915050565b6102cb816101d4565b82525050565b60006020820190506102e660008301846102c2565b92915050565b6102f581610257565b82525050565b600060608201905061031060008301866102ec565b61031d60208301856102ec565b61032a60408301846102c2565b949350505050565b60008115159050919050565b61034781610332565b811461035257600080fd5b50565b6000815190506103648161033e565b92915050565b6000602082840312156103805761037f6101cf565b5b600061038e84828501610355565b91505092915050565b60006020820190506103ac60008301846102ec565b92915050565b6000815190506103c1816101de565b92915050565b6000602082840312156103dd576103dc6101cf565b5b60006103eb848285016103b2565b9150509291505056fea26469706673582212202b00666b44003baf6b446bba689d03d8d20266995982c1d74d12901004956d7264736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x77A11F7E EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x20A JUMP JUMPDEST PUSH2 0x87 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x71 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x295 JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7E SWAP2 SWAP1 PUSH2 0x2D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x103 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x36A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x187 SWAP2 SWAP1 PUSH2 0x397 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x3C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E7 DUP2 PUSH2 0x1D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x204 DUP2 PUSH2 0x1DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x220 JUMPI PUSH2 0x21F PUSH2 0x1CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22E DUP5 DUP3 DUP6 ADD PUSH2 0x1F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x262 DUP3 PUSH2 0x237 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x272 DUP2 PUSH2 0x257 JUMP JUMPDEST DUP2 EQ PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28F DUP2 PUSH2 0x269 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AB JUMPI PUSH2 0x2AA PUSH2 0x1CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B9 DUP5 DUP3 DUP6 ADD PUSH2 0x280 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2CB DUP2 PUSH2 0x1D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F5 DUP2 PUSH2 0x257 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x310 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2EC JUMP JUMPDEST PUSH2 0x31D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2EC JUMP JUMPDEST PUSH2 0x32A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2C2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x347 DUP2 PUSH2 0x332 JUMP JUMPDEST DUP2 EQ PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x364 DUP2 PUSH2 0x33E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x380 JUMPI PUSH2 0x37F PUSH2 0x1CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38E DUP5 DUP3 DUP6 ADD PUSH2 0x355 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3AC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3C1 DUP2 PUSH2 0x1DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3DD JUMPI PUSH2 0x3DC PUSH2 0x1CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3EB DUP5 DUP3 DUP6 ADD PUSH2 0x3B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B STOP PUSH7 0x6B44003BAF6B44 PUSH12 0xBA689D03D8D20266995982C1 0xD7 0x4D SLT SWAP1 LT DIV SWAP6 PUSH14 0x7264736F6C634300080B00330000 ",
							"sourceMap": "128:606:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;499:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;618:114;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;499:113;551:7;;;;;;;;;;:20;;;572:10;591:4;597:7;551:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;499:113;:::o;618:114::-;676:4;698:7;;;;;;;;;;;:17;;;716:8;698:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;691:34;;618:114;;;:::o;88:117:2:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:122::-;1332:24;1350:5;1332:24;:::i;:::-;1325:5;1322:35;1312:63;;1371:1;1368;1361:12;1312:63;1259:122;:::o;1387:139::-;1433:5;1471:6;1458:20;1449:29;;1487:33;1514:5;1487:33;:::i;:::-;1387:139;;;;:::o;1532:329::-;1591:6;1640:2;1628:9;1619:7;1615:23;1611:32;1608:119;;;1646:79;;:::i;:::-;1608:119;1766:1;1791:53;1836:7;1827:6;1816:9;1812:22;1791:53;:::i;:::-;1781:63;;1737:117;1532:329;;;;:::o;1867:118::-;1954:24;1972:5;1954:24;:::i;:::-;1949:3;1942:37;1867:118;;:::o;1991:222::-;2084:4;2122:2;2111:9;2107:18;2099:26;;2135:71;2203:1;2192:9;2188:17;2179:6;2135:71;:::i;:::-;1991:222;;;;:::o;2219:118::-;2306:24;2324:5;2306:24;:::i;:::-;2301:3;2294:37;2219:118;;:::o;2343:442::-;2492:4;2530:2;2519:9;2515:18;2507:26;;2543:71;2611:1;2600:9;2596:17;2587:6;2543:71;:::i;:::-;2624:72;2692:2;2681:9;2677:18;2668:6;2624:72;:::i;:::-;2706;2774:2;2763:9;2759:18;2750:6;2706:72;:::i;:::-;2343:442;;;;;;:::o;2791:90::-;2825:7;2868:5;2861:13;2854:21;2843:32;;2791:90;;;:::o;2887:116::-;2957:21;2972:5;2957:21;:::i;:::-;2950:5;2947:32;2937:60;;2993:1;2990;2983:12;2937:60;2887:116;:::o;3009:137::-;3063:5;3094:6;3088:13;3079:22;;3110:30;3134:5;3110:30;:::i;:::-;3009:137;;;;:::o;3152:345::-;3219:6;3268:2;3256:9;3247:7;3243:23;3239:32;3236:119;;;3274:79;;:::i;:::-;3236:119;3394:1;3419:61;3472:7;3463:6;3452:9;3448:22;3419:61;:::i;:::-;3409:71;;3365:125;3152:345;;;;:::o;3503:222::-;3596:4;3634:2;3623:9;3619:18;3611:26;;3647:71;3715:1;3704:9;3700:17;3691:6;3647:71;:::i;:::-;3503:222;;;;:::o;3731:143::-;3788:5;3819:6;3813:13;3804:22;;3835:33;3862:5;3835:33;:::i;:::-;3731:143;;;;:::o;3880:351::-;3950:6;3999:2;3987:9;3978:7;3974:23;3970:32;3967:119;;;4005:79;;:::i;:::-;3967:119;4125:1;4150:64;4206:7;4197:6;4186:9;4182:22;4150:64;:::i;:::-;4140:74;;4096:128;3880:351;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "213200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getBalance(address)": "infinite",
								"transferFrom(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 128,
									"end": 734,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 128,
									"end": 734,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 128,
									"end": 734,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 184,
									"end": 317,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 184,
									"end": 317,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 184,
									"end": 317,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 184,
									"end": 317,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 184,
									"end": 317,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 184,
									"end": 317,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 317,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 184,
									"end": 317,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 184,
									"end": 317,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 184,
									"end": 317,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 184,
									"end": 317,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 184,
									"end": 317,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 184,
									"end": 317,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 184,
									"end": 317,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 184,
									"end": 317,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 184,
									"end": 317,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 184,
									"end": 317,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 184,
									"end": 317,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 184,
									"end": 317,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 184,
									"end": 317,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 184,
									"end": 317,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 184,
									"end": 317,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 184,
									"end": 317,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 184,
									"end": 317,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 184,
									"end": 317,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 184,
									"end": 317,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 184,
									"end": 317,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 184,
									"end": 317,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 184,
									"end": 317,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 184,
									"end": 317,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 184,
									"end": 317,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 184,
									"end": 317,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 184,
									"end": 317,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 184,
									"end": 317,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 184,
									"end": 317,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 243,
									"end": 256,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 228,
									"end": 235,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 228,
									"end": 235,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 228,
									"end": 257,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 228,
									"end": 257,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 228,
									"end": 257,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 228,
									"end": 257,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 228,
									"end": 257,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 228,
									"end": 257,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 228,
									"end": 257,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 228,
									"end": 257,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 228,
									"end": 257,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 228,
									"end": 257,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 228,
									"end": 257,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 228,
									"end": 257,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 228,
									"end": 257,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 228,
									"end": 257,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 228,
									"end": 257,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 228,
									"end": 257,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 228,
									"end": 257,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 228,
									"end": 257,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 184,
									"end": 317,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 128,
									"end": 734,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 128,
									"end": 734,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 128,
									"end": 734,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 128,
									"end": 734,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 128,
									"end": 734,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 128,
									"end": 734,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 128,
									"end": 734,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 128,
									"end": 734,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 734,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 128,
									"end": 734,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 734,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202b00666b44003baf6b446bba689d03d8d20266995982c1d74d12901004956d7264736f6c634300080b0033",
									".code": [
										{
											"begin": 128,
											"end": 734,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 128,
											"end": 734,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 128,
											"end": 734,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 128,
											"end": 734,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 128,
											"end": 734,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 734,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 128,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 128,
											"end": 734,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 128,
											"end": 734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 734,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 734,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 128,
											"end": 734,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 128,
											"end": 734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 128,
											"end": 734,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 128,
											"end": 734,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 128,
											"end": 734,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 128,
											"end": 734,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 128,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 128,
											"end": 734,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 128,
											"end": 734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 734,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 128,
											"end": 734,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 128,
											"end": 734,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 128,
											"end": 734,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 734,
											"name": "PUSH",
											"source": 1,
											"value": "77A11F7E"
										},
										{
											"begin": 128,
											"end": 734,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 128,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 128,
											"end": 734,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 128,
											"end": 734,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 734,
											"name": "PUSH",
											"source": 1,
											"value": "F8B2CB4F"
										},
										{
											"begin": 128,
											"end": 734,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 128,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 128,
											"end": 734,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 128,
											"end": 734,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 128,
											"end": 734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 128,
											"end": 734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 734,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 734,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 499,
											"end": 612,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 499,
											"end": 612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 499,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 499,
											"end": 612,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 499,
											"end": 612,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 499,
											"end": 612,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 499,
											"end": 612,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 499,
											"end": 612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 499,
											"end": 612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 499,
											"end": 612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 499,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 499,
											"end": 612,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 499,
											"end": 612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 499,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 499,
											"end": 612,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 499,
											"end": 612,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 499,
											"end": 612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 499,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 499,
											"end": 612,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 499,
											"end": 612,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 499,
											"end": 612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 499,
											"end": 612,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 618,
											"end": 732,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 732,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 618,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 618,
											"end": 732,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 732,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 618,
											"end": 732,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 618,
											"end": 732,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 618,
											"end": 732,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 618,
											"end": 732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 618,
											"end": 732,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 618,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 618,
											"end": 732,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 618,
											"end": 732,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 618,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 618,
											"end": 732,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 618,
											"end": 732,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 618,
											"end": 732,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 618,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 618,
											"end": 732,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 618,
											"end": 732,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 618,
											"end": 732,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 618,
											"end": 732,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 618,
											"end": 732,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 618,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 618,
											"end": 732,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 618,
											"end": 732,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 618,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 618,
											"end": 732,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 618,
											"end": 732,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 618,
											"end": 732,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 618,
											"end": 732,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 618,
											"end": 732,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 618,
											"end": 732,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 618,
											"end": 732,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 618,
											"end": 732,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 618,
											"end": 732,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 618,
											"end": 732,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 499,
											"end": 612,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 499,
											"end": 612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 558,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 551,
											"end": 558,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 551,
											"end": 558,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 551,
											"end": 558,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 551,
											"end": 558,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 551,
											"end": 558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 551,
											"end": 558,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 551,
											"end": 558,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 551,
											"end": 558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 551,
											"end": 571,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 551,
											"end": 571,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 551,
											"end": 571,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 572,
											"end": 582,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 591,
											"end": 595,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 597,
											"end": 604,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 499,
											"end": 612,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 499,
											"end": 612,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 618,
											"end": 732,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 618,
											"end": 732,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 676,
											"end": 680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 705,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 698,
											"end": 705,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 698,
											"end": 705,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 698,
											"end": 705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 698,
											"end": 705,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 698,
											"end": 705,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 698,
											"end": 705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 698,
											"end": 705,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 698,
											"end": 705,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 698,
											"end": 705,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 698,
											"end": 715,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 698,
											"end": 715,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 698,
											"end": 715,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 716,
											"end": 724,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 691,
											"end": 725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 691,
											"end": 725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 618,
											"end": 732,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 618,
											"end": 732,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 618,
											"end": 732,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 618,
											"end": 732,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1144,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1100,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1350,
											"end": 1355,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1325,
											"end": 1330,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1322,
											"end": 1357,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1371,
											"end": 1372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1361,
											"end": 1373,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1438,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1478,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1591,
											"end": 1597,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1642,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1637,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1619,
											"end": 1626,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1638,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1643,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1766,
											"end": 1767,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1836,
											"end": 1843,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1833,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1816,
											"end": 1825,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1812,
											"end": 1834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1781,
											"end": 1844,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1781,
											"end": 1844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1972,
											"end": 1977,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1954,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1949,
											"end": 1952,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1985,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2088,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2124,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2111,
											"end": 2120,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 2125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2099,
											"end": 2125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2099,
											"end": 2125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2203,
											"end": 2204,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2192,
											"end": 2201,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2205,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2135,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2213,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2324,
											"end": 2329,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2306,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2301,
											"end": 2304,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2294,
											"end": 2331,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2337,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2343,
											"end": 2785,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2343,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2492,
											"end": 2496,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2532,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2519,
											"end": 2528,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2515,
											"end": 2533,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2533,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2533,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2611,
											"end": 2612,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2600,
											"end": 2609,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2596,
											"end": 2613,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2587,
											"end": 2593,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2614,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2543,
											"end": 2614,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2543,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2624,
											"end": 2696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2674,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2624,
											"end": 2696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2624,
											"end": 2696,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2624,
											"end": 2696,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2624,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2774,
											"end": 2776,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2772,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2759,
											"end": 2777,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2750,
											"end": 2756,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2706,
											"end": 2778,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2706,
											"end": 2778,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2706,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2785,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2785,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2785,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2785,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2785,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2785,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2785,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2791,
											"end": 2881,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2791,
											"end": 2881,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2825,
											"end": 2832,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2868,
											"end": 2873,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2861,
											"end": 2874,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2854,
											"end": 2875,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2843,
											"end": 2875,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2843,
											"end": 2875,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2791,
											"end": 2881,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2791,
											"end": 2881,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2791,
											"end": 2881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2791,
											"end": 2881,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2887,
											"end": 3003,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2887,
											"end": 3003,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2957,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2972,
											"end": 2977,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2957,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2957,
											"end": 2978,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2957,
											"end": 2978,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2957,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2950,
											"end": 2955,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2947,
											"end": 2979,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2937,
											"end": 2997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2993,
											"end": 2994,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2990,
											"end": 2991,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2983,
											"end": 2995,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2997,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2937,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2887,
											"end": 3003,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2887,
											"end": 3003,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3009,
											"end": 3146,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3009,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3068,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3094,
											"end": 3100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3110,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3134,
											"end": 3139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3110,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3110,
											"end": 3140,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3110,
											"end": 3140,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3110,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3152,
											"end": 3497,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3152,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3219,
											"end": 3225,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3268,
											"end": 3270,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3256,
											"end": 3265,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3247,
											"end": 3254,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3243,
											"end": 3266,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3239,
											"end": 3271,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3355,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3236,
											"end": 3355,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3274,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3274,
											"end": 3353,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3274,
											"end": 3353,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3274,
											"end": 3353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3355,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3236,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3395,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3472,
											"end": 3479,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3463,
											"end": 3469,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3452,
											"end": 3461,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3448,
											"end": 3470,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3419,
											"end": 3480,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3419,
											"end": 3480,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3419,
											"end": 3480,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3409,
											"end": 3480,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3409,
											"end": 3480,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3490,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3152,
											"end": 3497,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3152,
											"end": 3497,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3152,
											"end": 3497,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3152,
											"end": 3497,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3152,
											"end": 3497,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3503,
											"end": 3725,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3503,
											"end": 3725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3596,
											"end": 3600,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3636,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3632,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3619,
											"end": 3637,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3637,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3647,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3715,
											"end": 3716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3704,
											"end": 3713,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 3717,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3691,
											"end": 3697,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3647,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3647,
											"end": 3718,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3647,
											"end": 3718,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3647,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3503,
											"end": 3725,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3503,
											"end": 3725,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3503,
											"end": 3725,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3503,
											"end": 3725,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3503,
											"end": 3725,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3731,
											"end": 3874,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3731,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3788,
											"end": 3793,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3819,
											"end": 3825,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3813,
											"end": 3826,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3804,
											"end": 3826,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3804,
											"end": 3826,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3862,
											"end": 3867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3835,
											"end": 3868,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3835,
											"end": 3868,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3835,
											"end": 3868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3874,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3874,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3874,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3880,
											"end": 4231,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3880,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3950,
											"end": 3956,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4001,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3987,
											"end": 3996,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3978,
											"end": 3985,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3974,
											"end": 3997,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3970,
											"end": 4002,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3967,
											"end": 4086,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3967,
											"end": 4086,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3967,
											"end": 4086,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4005,
											"end": 4084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4005,
											"end": 4084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4005,
											"end": 4084,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4005,
											"end": 4084,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4005,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3967,
											"end": 4086,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3967,
											"end": 4086,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4126,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4150,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4206,
											"end": 4213,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4203,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4186,
											"end": 4195,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4182,
											"end": 4204,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4150,
											"end": 4214,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4150,
											"end": 4214,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4150,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4140,
											"end": 4214,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4140,
											"end": 4214,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4096,
											"end": 4224,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 4231,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 4231,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 4231,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 4231,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3880,
											"end": 4231,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getBalance(address)": "f8b2cb4f",
							"transferFrom(uint256)": "77a11f7e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/17_ReceiveTokenContract.sol\":\"ReceiveTokenContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"contracts/17_ReceiveTokenContract.sol\":{\"keccak256\":\"0x51c0ffe7c6a0d76814a187f7f00753a9997033f3e7f734b23455f5aa87b14385\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://71133bc59faff6c0bc488548f30c9956c2ef4d05be910012e8ddc2cdaa90b4d0\",\"dweb:/ipfs/QmSFemcntxVgDnwPd8LmyHXf67r62RqwP8YJdNSxWqzSP4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 83,
								"contract": "contracts/17_ReceiveTokenContract.sol:ReceiveTokenContract",
								"label": "myToken",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)77"
							}
						],
						"types": {
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"contracts/17_ReceiveTokenContract.sol": {
				"ast": {
					"absolutePath": "contracts/17_ReceiveTokenContract.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"ReceiveTokenContract": [
							127
						]
					},
					"id": 128,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 128,
							"sourceUnit": 78,
							"src": "70:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ReceiveTokenContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 127,
							"linearizedBaseContracts": [
								127
							],
							"name": "ReceiveTokenContract",
							"nameLocation": "137:20:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 83,
									"mutability": "mutable",
									"name": "myToken",
									"nameLocation": "170:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 127,
									"src": "163:14:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 82,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 81,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "163:6:1"
										},
										"referencedDeclaration": 77,
										"src": "163:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "218:99:1",
										"statements": [
											{
												"expression": {
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 88,
														"name": "myToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "228:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 90,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "243:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 89,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "236:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 91,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "236:21:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "228:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "228:29:1"
											}
										]
									},
									"id": 95,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "204:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "196:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "196:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "195:23:1"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "218:0:1"
									},
									"scope": 127,
									"src": "184:133:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "541:71:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 103,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "572:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "572:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 107,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "591:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ReceiveTokenContract_$127",
																		"typeString": "contract ReceiveTokenContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ReceiveTokenContract_$127",
																		"typeString": "contract ReceiveTokenContract"
																	}
																],
																"id": 106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "583:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 105,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "583:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "583:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 109,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "597:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 100,
															"name": "myToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "551:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "551:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "551:54:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "551:54:1"
											}
										]
									},
									"functionSelector": "77a11f7e",
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "508:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "526:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "521:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "521:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "520:14:1"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "541:0:1"
									},
									"scope": 127,
									"src": "499:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "681:51:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "716:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 120,
															"name": "myToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "698:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "698:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "698:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 119,
												"id": 124,
												"nodeType": "Return",
												"src": "691:34:1"
											}
										]
									},
									"functionSelector": "f8b2cb4f",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "627:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "646:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "638:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "638:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "637:18:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "676:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "676:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "675:6:1"
									},
									"scope": 127,
									"src": "618:114:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 128,
							"src": "128:606:1",
							"usedErrors": []
						}
					],
					"src": "37:697:1"
				},
				"id": 1
			}
		}
	}
}