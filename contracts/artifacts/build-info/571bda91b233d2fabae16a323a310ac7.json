{
	"id": "571bda91b233d2fabae16a323a310ac7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/17_ReceiveTokenContract.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract ReceiveTokenContract{\n    IERC20 myToken;\n    address owner;\n\n    constructor(address _tokenAddress){\n        myToken=IERC20(_tokenAddress);//将一个此接口的实现类实例地址传进来\n        owner=msg.sender;\n    }\n\n    //将代币转移到此合约\n    //这里转账不能直接转账，需要我们的账户在币的合约那边给此合约一个授权额度，才能把钱转到此合约\n    function transferFrom(uint _amount) public{\n        myToken.transferFrom(msg.sender,address(this),_amount);\n    }\n\n    function getBalance(address _address) public view returns(uint){\n        return myToken.balanceOf(_address);\n    }\n\n    //销毁自己\n    function kill() public{\n        //myToken.transfer(owner,myToken.balanceOf(address(this)));\n        selfdestruct(payable(owner));\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/17_ReceiveTokenContract.sol": {
				"ReceiveTokenContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kill",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/17_ReceiveTokenContract.sol\":128:939  contract ReceiveTokenContract{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/17_ReceiveTokenContract.sol\":203:362  constructor(address _tokenAddress){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/17_ReceiveTokenContract.sol\":262:275  _tokenAddress */\n  dup1\n    /* \"contracts/17_ReceiveTokenContract.sol\":247:254  myToken */\n  0x00\n  dup1\n    /* \"contracts/17_ReceiveTokenContract.sol\":247:276  myToken=IERC20(_tokenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/17_ReceiveTokenContract.sol\":345:355  msg.sender */\n  caller\n    /* \"contracts/17_ReceiveTokenContract.sol\":339:344  owner */\n  0x01\n  0x00\n    /* \"contracts/17_ReceiveTokenContract.sol\":339:355  owner=msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/17_ReceiveTokenContract.sol\":203:362  constructor(address _tokenAddress){... */\n  pop\n    /* \"contracts/17_ReceiveTokenContract.sol\":128:939  contract ReceiveTokenContract{... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:507   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:362   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":281:360   */\n  tag_14\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":243:362   */\ntag_13:\n    /* \"#utility.yul\":401:402   */\n  0x00\n    /* \"#utility.yul\":426:490   */\n  tag_16\n    /* \"#utility.yul\":482:489   */\n  dup5\n    /* \"#utility.yul\":473:479   */\n  dup3\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":426:490   */\n  tag_8\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":416:490   */\n  swap2\n  pop\n    /* \"#utility.yul\":372:500   */\n  pop\n    /* \"#utility.yul\":156:507   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":594:690   */\ntag_19:\n    /* \"#utility.yul\":631:638   */\n  0x00\n    /* \"#utility.yul\":660:684   */\n  tag_21\n    /* \"#utility.yul\":678:683   */\n  dup3\n    /* \"#utility.yul\":660:684   */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":649:684   */\n  swap1\n  pop\n    /* \"#utility.yul\":594:690   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:822   */\ntag_22:\n    /* \"#utility.yul\":733:740   */\n  0x00\n    /* \"#utility.yul\":773:815   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":766:771   */\n  dup3\n    /* \"#utility.yul\":762:816   */\n  and\n    /* \"#utility.yul\":751:816   */\n  swap1\n  pop\n    /* \"#utility.yul\":696:822   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":951:1068   */\ntag_15:\n    /* \"#utility.yul\":1060:1061   */\n  0x00\n    /* \"#utility.yul\":1057:1058   */\n  dup1\n    /* \"#utility.yul\":1050:1062   */\n  revert\n    /* \"#utility.yul\":1074:1196   */\ntag_11:\n    /* \"#utility.yul\":1147:1171   */\n  tag_28\n    /* \"#utility.yul\":1165:1170   */\n  dup2\n    /* \"#utility.yul\":1147:1171   */\n  tag_19\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":1140:1145   */\n  dup2\n    /* \"#utility.yul\":1137:1172   */\n  eq\n    /* \"#utility.yul\":1127:1190   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1186:1187   */\n  0x00\n    /* \"#utility.yul\":1183:1184   */\n  dup1\n    /* \"#utility.yul\":1176:1188   */\n  revert\n    /* \"#utility.yul\":1127:1190   */\ntag_29:\n    /* \"#utility.yul\":1074:1196   */\n  pop\n  jump\t// out\n    /* \"contracts/17_ReceiveTokenContract.sol\":128:939  contract ReceiveTokenContract{... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/17_ReceiveTokenContract.sol\":128:939  contract ReceiveTokenContract{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x41c0e1b5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x77a11f7e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf8b2cb4f\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/17_ReceiveTokenContract.sol\":802:937  function kill() public{... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/17_ReceiveTokenContract.sol\":544:657  function transferFrom(uint _amount) public{... */\n    tag_4:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      stop\n        /* \"contracts/17_ReceiveTokenContract.sol\":663:777  function getBalance(address _address) public view returns(uint){... */\n    tag_5:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/17_ReceiveTokenContract.sol\":802:937  function kill() public{... */\n    tag_7:\n        /* \"contracts/17_ReceiveTokenContract.sol\":923:928  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/17_ReceiveTokenContract.sol\":902:930  selfdestruct(payable(owner)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"contracts/17_ReceiveTokenContract.sol\":544:657  function transferFrom(uint _amount) public{... */\n    tag_11:\n        /* \"contracts/17_ReceiveTokenContract.sol\":596:603  myToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/17_ReceiveTokenContract.sol\":596:616  myToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/17_ReceiveTokenContract.sol\":617:627  msg.sender */\n      caller\n        /* \"contracts/17_ReceiveTokenContract.sol\":636:640  this */\n      address\n        /* \"contracts/17_ReceiveTokenContract.sol\":642:649  _amount */\n      dup5\n        /* \"contracts/17_ReceiveTokenContract.sol\":596:650  myToken.transferFrom(msg.sender,address(this),_amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_20\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_24\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_24:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      pop\n        /* \"contracts/17_ReceiveTokenContract.sol\":544:657  function transferFrom(uint _amount) public{... */\n      pop\n      jump\t// out\n        /* \"contracts/17_ReceiveTokenContract.sol\":663:777  function getBalance(address _address) public view returns(uint){... */\n    tag_15:\n        /* \"contracts/17_ReceiveTokenContract.sol\":721:725  uint */\n      0x00\n        /* \"contracts/17_ReceiveTokenContract.sol\":743:750  myToken */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/17_ReceiveTokenContract.sol\":743:760  myToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/17_ReceiveTokenContract.sol\":761:769  _address */\n      dup4\n        /* \"contracts/17_ReceiveTokenContract.sol\":743:770  myToken.balanceOf(_address) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_32\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_32:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n        /* \"contracts/17_ReceiveTokenContract.sol\":736:770  return myToken.balanceOf(_address) */\n      swap1\n      pop\n        /* \"contracts/17_ReceiveTokenContract.sol\":663:777  function getBalance(address _address) public view returns(uint){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_36:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_38\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_40:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_42\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_44:\n        /* \"#utility.yul\":341:346   */\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_46\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":295:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:583   */\n    tag_48:\n        /* \"#utility.yul\":497:502   */\n      0x00\n        /* \"#utility.yul\":528:534   */\n      dup2\n        /* \"#utility.yul\":522:535   */\n      mload\n        /* \"#utility.yul\":513:535   */\n      swap1\n      pop\n        /* \"#utility.yul\":544:577   */\n      tag_50\n        /* \"#utility.yul\":571:576   */\n      dup2\n        /* \"#utility.yul\":544:577   */\n      tag_47\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":440:583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":589:918   */\n    tag_14:\n        /* \"#utility.yul\":648:654   */\n      0x00\n        /* \"#utility.yul\":697:699   */\n      0x20\n        /* \"#utility.yul\":685:694   */\n      dup3\n        /* \"#utility.yul\":676:683   */\n      dup5\n        /* \"#utility.yul\":672:695   */\n      sub\n        /* \"#utility.yul\":668:700   */\n      slt\n        /* \"#utility.yul\":665:784   */\n      iszero\n      tag_52\n      jumpi\n        /* \"#utility.yul\":703:782   */\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":665:784   */\n    tag_52:\n        /* \"#utility.yul\":823:824   */\n      0x00\n        /* \"#utility.yul\":848:901   */\n      tag_55\n        /* \"#utility.yul\":893:900   */\n      dup5\n        /* \"#utility.yul\":884:890   */\n      dup3\n        /* \"#utility.yul\":873:882   */\n      dup6\n        /* \"#utility.yul\":869:891   */\n      add\n        /* \"#utility.yul\":848:901   */\n      tag_36\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":838:901   */\n      swap2\n      pop\n        /* \"#utility.yul\":794:911   */\n      pop\n        /* \"#utility.yul\":589:918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1269   */\n    tag_26:\n        /* \"#utility.yul\":991:997   */\n      0x00\n        /* \"#utility.yul\":1040:1042   */\n      0x20\n        /* \"#utility.yul\":1028:1037   */\n      dup3\n        /* \"#utility.yul\":1019:1026   */\n      dup5\n        /* \"#utility.yul\":1015:1038   */\n      sub\n        /* \"#utility.yul\":1011:1043   */\n      slt\n        /* \"#utility.yul\":1008:1127   */\n      iszero\n      tag_57\n      jumpi\n        /* \"#utility.yul\":1046:1125   */\n      tag_58\n      tag_54\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1008:1127   */\n    tag_57:\n        /* \"#utility.yul\":1166:1167   */\n      0x00\n        /* \"#utility.yul\":1191:1252   */\n      tag_59\n        /* \"#utility.yul\":1244:1251   */\n      dup5\n        /* \"#utility.yul\":1235:1241   */\n      dup3\n        /* \"#utility.yul\":1224:1233   */\n      dup6\n        /* \"#utility.yul\":1220:1242   */\n      add\n        /* \"#utility.yul\":1191:1252   */\n      tag_40\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1181:1252   */\n      swap2\n      pop\n        /* \"#utility.yul\":1137:1262   */\n      pop\n        /* \"#utility.yul\":924:1269   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1275:1604   */\n    tag_10:\n        /* \"#utility.yul\":1334:1340   */\n      0x00\n        /* \"#utility.yul\":1383:1385   */\n      0x20\n        /* \"#utility.yul\":1371:1380   */\n      dup3\n        /* \"#utility.yul\":1362:1369   */\n      dup5\n        /* \"#utility.yul\":1358:1381   */\n      sub\n        /* \"#utility.yul\":1354:1386   */\n      slt\n        /* \"#utility.yul\":1351:1470   */\n      iszero\n      tag_61\n      jumpi\n        /* \"#utility.yul\":1389:1468   */\n      tag_62\n      tag_54\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1351:1470   */\n    tag_61:\n        /* \"#utility.yul\":1509:1510   */\n      0x00\n        /* \"#utility.yul\":1534:1587   */\n      tag_63\n        /* \"#utility.yul\":1579:1586   */\n      dup5\n        /* \"#utility.yul\":1570:1576   */\n      dup3\n        /* \"#utility.yul\":1559:1568   */\n      dup6\n        /* \"#utility.yul\":1555:1577   */\n      add\n        /* \"#utility.yul\":1534:1587   */\n      tag_44\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1524:1587   */\n      swap2\n      pop\n        /* \"#utility.yul\":1480:1597   */\n      pop\n        /* \"#utility.yul\":1275:1604   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1610:1961   */\n    tag_34:\n        /* \"#utility.yul\":1680:1686   */\n      0x00\n        /* \"#utility.yul\":1729:1731   */\n      0x20\n        /* \"#utility.yul\":1717:1726   */\n      dup3\n        /* \"#utility.yul\":1708:1715   */\n      dup5\n        /* \"#utility.yul\":1704:1727   */\n      sub\n        /* \"#utility.yul\":1700:1732   */\n      slt\n        /* \"#utility.yul\":1697:1816   */\n      iszero\n      tag_65\n      jumpi\n        /* \"#utility.yul\":1735:1814   */\n      tag_66\n      tag_54\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":1697:1816   */\n    tag_65:\n        /* \"#utility.yul\":1855:1856   */\n      0x00\n        /* \"#utility.yul\":1880:1944   */\n      tag_67\n        /* \"#utility.yul\":1936:1943   */\n      dup5\n        /* \"#utility.yul\":1927:1933   */\n      dup3\n        /* \"#utility.yul\":1916:1925   */\n      dup6\n        /* \"#utility.yul\":1912:1934   */\n      add\n        /* \"#utility.yul\":1880:1944   */\n      tag_48\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1870:1944   */\n      swap2\n      pop\n        /* \"#utility.yul\":1826:1954   */\n      pop\n        /* \"#utility.yul\":1610:1961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1967:2085   */\n    tag_68:\n        /* \"#utility.yul\":2054:2078   */\n      tag_70\n        /* \"#utility.yul\":2072:2077   */\n      dup2\n        /* \"#utility.yul\":2054:2078   */\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":2049:2052   */\n      dup3\n        /* \"#utility.yul\":2042:2079   */\n      mstore\n        /* \"#utility.yul\":1967:2085   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2209   */\n    tag_72:\n        /* \"#utility.yul\":2178:2202   */\n      tag_74\n        /* \"#utility.yul\":2196:2201   */\n      dup2\n        /* \"#utility.yul\":2178:2202   */\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":2173:2176   */\n      dup3\n        /* \"#utility.yul\":2166:2203   */\n      mstore\n        /* \"#utility.yul\":2091:2209   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2215:2437   */\n    tag_29:\n        /* \"#utility.yul\":2308:2312   */\n      0x00\n        /* \"#utility.yul\":2346:2348   */\n      0x20\n        /* \"#utility.yul\":2335:2344   */\n      dup3\n        /* \"#utility.yul\":2331:2349   */\n      add\n        /* \"#utility.yul\":2323:2349   */\n      swap1\n      pop\n        /* \"#utility.yul\":2359:2430   */\n      tag_77\n        /* \"#utility.yul\":2427:2428   */\n      0x00\n        /* \"#utility.yul\":2416:2425   */\n      dup4\n        /* \"#utility.yul\":2412:2429   */\n      add\n        /* \"#utility.yul\":2403:2409   */\n      dup5\n        /* \"#utility.yul\":2359:2430   */\n      tag_68\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":2215:2437   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2443:2885   */\n    tag_21:\n        /* \"#utility.yul\":2592:2596   */\n      0x00\n        /* \"#utility.yul\":2630:2632   */\n      0x60\n        /* \"#utility.yul\":2619:2628   */\n      dup3\n        /* \"#utility.yul\":2615:2633   */\n      add\n        /* \"#utility.yul\":2607:2633   */\n      swap1\n      pop\n        /* \"#utility.yul\":2643:2714   */\n      tag_79\n        /* \"#utility.yul\":2711:2712   */\n      0x00\n        /* \"#utility.yul\":2700:2709   */\n      dup4\n        /* \"#utility.yul\":2696:2713   */\n      add\n        /* \"#utility.yul\":2687:2693   */\n      dup7\n        /* \"#utility.yul\":2643:2714   */\n      tag_68\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":2724:2796   */\n      tag_80\n        /* \"#utility.yul\":2792:2794   */\n      0x20\n        /* \"#utility.yul\":2781:2790   */\n      dup4\n        /* \"#utility.yul\":2777:2795   */\n      add\n        /* \"#utility.yul\":2768:2774   */\n      dup6\n        /* \"#utility.yul\":2724:2796   */\n      tag_68\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2806:2878   */\n      tag_81\n        /* \"#utility.yul\":2874:2876   */\n      0x40\n        /* \"#utility.yul\":2863:2872   */\n      dup4\n        /* \"#utility.yul\":2859:2877   */\n      add\n        /* \"#utility.yul\":2850:2856   */\n      dup5\n        /* \"#utility.yul\":2806:2878   */\n      tag_72\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":2443:2885   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2891:3113   */\n    tag_17:\n        /* \"#utility.yul\":2984:2988   */\n      0x00\n        /* \"#utility.yul\":3022:3024   */\n      0x20\n        /* \"#utility.yul\":3011:3020   */\n      dup3\n        /* \"#utility.yul\":3007:3025   */\n      add\n        /* \"#utility.yul\":2999:3025   */\n      swap1\n      pop\n        /* \"#utility.yul\":3035:3106   */\n      tag_83\n        /* \"#utility.yul\":3103:3104   */\n      0x00\n        /* \"#utility.yul\":3092:3101   */\n      dup4\n        /* \"#utility.yul\":3088:3105   */\n      add\n        /* \"#utility.yul\":3079:3085   */\n      dup5\n        /* \"#utility.yul\":3035:3106   */\n      tag_72\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":2891:3113   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3200:3296   */\n    tag_71:\n        /* \"#utility.yul\":3237:3244   */\n      0x00\n        /* \"#utility.yul\":3266:3290   */\n      tag_87\n        /* \"#utility.yul\":3284:3289   */\n      dup3\n        /* \"#utility.yul\":3266:3290   */\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":3255:3290   */\n      swap1\n      pop\n        /* \"#utility.yul\":3200:3296   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3302:3392   */\n    tag_89:\n        /* \"#utility.yul\":3336:3343   */\n      0x00\n        /* \"#utility.yul\":3379:3384   */\n      dup2\n        /* \"#utility.yul\":3372:3385   */\n      iszero\n        /* \"#utility.yul\":3365:3386   */\n      iszero\n        /* \"#utility.yul\":3354:3386   */\n      swap1\n      pop\n        /* \"#utility.yul\":3302:3392   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3398:3524   */\n    tag_88:\n        /* \"#utility.yul\":3435:3442   */\n      0x00\n        /* \"#utility.yul\":3475:3517   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3468:3473   */\n      dup3\n        /* \"#utility.yul\":3464:3518   */\n      and\n        /* \"#utility.yul\":3453:3518   */\n      swap1\n      pop\n        /* \"#utility.yul\":3398:3524   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3530:3607   */\n    tag_75:\n        /* \"#utility.yul\":3567:3574   */\n      0x00\n        /* \"#utility.yul\":3596:3601   */\n      dup2\n        /* \"#utility.yul\":3585:3601   */\n      swap1\n      pop\n        /* \"#utility.yul\":3530:3607   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3736:3853   */\n    tag_54:\n        /* \"#utility.yul\":3845:3846   */\n      0x00\n        /* \"#utility.yul\":3842:3843   */\n      dup1\n        /* \"#utility.yul\":3835:3847   */\n      revert\n        /* \"#utility.yul\":3859:3981   */\n    tag_39:\n        /* \"#utility.yul\":3932:3956   */\n      tag_97\n        /* \"#utility.yul\":3950:3955   */\n      dup2\n        /* \"#utility.yul\":3932:3956   */\n      tag_71\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":3925:3930   */\n      dup2\n        /* \"#utility.yul\":3922:3957   */\n      eq\n        /* \"#utility.yul\":3912:3975   */\n      tag_98\n      jumpi\n        /* \"#utility.yul\":3971:3972   */\n      0x00\n        /* \"#utility.yul\":3968:3969   */\n      dup1\n        /* \"#utility.yul\":3961:3973   */\n      revert\n        /* \"#utility.yul\":3912:3975   */\n    tag_98:\n        /* \"#utility.yul\":3859:3981   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3987:4103   */\n    tag_43:\n        /* \"#utility.yul\":4057:4078   */\n      tag_100\n        /* \"#utility.yul\":4072:4077   */\n      dup2\n        /* \"#utility.yul\":4057:4078   */\n      tag_89\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":4050:4055   */\n      dup2\n        /* \"#utility.yul\":4047:4079   */\n      eq\n        /* \"#utility.yul\":4037:4097   */\n      tag_101\n      jumpi\n        /* \"#utility.yul\":4093:4094   */\n      0x00\n        /* \"#utility.yul\":4090:4091   */\n      dup1\n        /* \"#utility.yul\":4083:4095   */\n      revert\n        /* \"#utility.yul\":4037:4097   */\n    tag_101:\n        /* \"#utility.yul\":3987:4103   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4109:4231   */\n    tag_47:\n        /* \"#utility.yul\":4182:4206   */\n      tag_103\n        /* \"#utility.yul\":4200:4205   */\n      dup2\n        /* \"#utility.yul\":4182:4206   */\n      tag_75\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":4175:4180   */\n      dup2\n        /* \"#utility.yul\":4172:4207   */\n      eq\n        /* \"#utility.yul\":4162:4225   */\n      tag_104\n      jumpi\n        /* \"#utility.yul\":4221:4222   */\n      0x00\n        /* \"#utility.yul\":4218:4219   */\n      dup1\n        /* \"#utility.yul\":4211:4223   */\n      revert\n        /* \"#utility.yul\":4162:4225   */\n    tag_104:\n        /* \"#utility.yul\":4109:4231   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208d558120816bf28ed322a3ba0d0752bf24eb1d251fdeccc9259b1ed534b6957c64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_102": {
									"entryPoint": null,
									"id": 102,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 301,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:2",
														"type": ""
													}
												],
												"src": "7:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:274:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "281:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:2"
															},
															"nodeType": "YulIf",
															"src": "243:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "372:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "387:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "391:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "416:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "462:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "473:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "482:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "426:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "416:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:2",
														"type": ""
													}
												],
												"src": "156:351:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "553:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "563:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "573:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "546:6:2",
														"type": ""
													}
												],
												"src": "513:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "639:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "649:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "678:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "660:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "649:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "621:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "631:7:2",
														"type": ""
													}
												],
												"src": "594:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "751:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "766:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "773:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "751:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "723:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "733:7:2",
														"type": ""
													}
												],
												"src": "696:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "934:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "927:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "828:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1040:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1057:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1060:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1050:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1050:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1050:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "951:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1117:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1174:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1183:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1186:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1176:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1176:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1176:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1140:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1165:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1147:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1137:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1137:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1130:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:43:2"
															},
															"nodeType": "YulIf",
															"src": "1127:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1110:5:2",
														"type": ""
													}
												],
												"src": "1074:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516105f03803806105f0833981810160405281019061003291906100ce565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610149565b6000815190506100c881610132565b92915050565b6000602082840312156100e4576100e361012d565b5b60006100f2848285016100b9565b91505092915050565b60006101068261010d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b61013b816100fb565b811461014657600080fd5b50565b610498806101586000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806341c0e1b51461004657806377a11f7e14610050578063f8b2cb4f1461006c575b600080fd5b61004e61009c565b005b61006a600480360381019061006591906102eb565b6100d7565b005b61008660048036038101906100819190610291565b61018a565b60405161009391906103b5565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016101349392919061037e565b602060405180830381600087803b15801561014e57600080fd5b505af1158015610162573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018691906102be565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b81526004016101e69190610363565b60206040518083038186803b1580156101fe57600080fd5b505afa158015610212573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102369190610318565b9050919050565b60008135905061024c8161041d565b92915050565b60008151905061026181610434565b92915050565b6000813590506102768161044b565b92915050565b60008151905061028b8161044b565b92915050565b6000602082840312156102a7576102a6610418565b5b60006102b58482850161023d565b91505092915050565b6000602082840312156102d4576102d3610418565b5b60006102e284828501610252565b91505092915050565b60006020828403121561030157610300610418565b5b600061030f84828501610267565b91505092915050565b60006020828403121561032e5761032d610418565b5b600061033c8482850161027c565b91505092915050565b61034e816103d0565b82525050565b61035d8161040e565b82525050565b60006020820190506103786000830184610345565b92915050565b60006060820190506103936000830186610345565b6103a06020830185610345565b6103ad6040830184610354565b949350505050565b60006020820190506103ca6000830184610354565b92915050565b60006103db826103ee565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b610426816103d0565b811461043157600080fd5b50565b61043d816103e2565b811461044857600080fd5b50565b6104548161040e565b811461045f57600080fd5b5056fea26469706673582212208d558120816bf28ed322a3ba0d0752bf24eb1d251fdeccc9259b1ed534b6957c64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x5F0 CODESIZE SUB DUP1 PUSH2 0x5F0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x149 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC8 DUP2 PUSH2 0x132 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE4 JUMPI PUSH2 0xE3 PUSH2 0x12D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF2 DUP5 DUP3 DUP6 ADD PUSH2 0xB9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x106 DUP3 PUSH2 0x10D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13B DUP2 PUSH2 0xFB JUMP JUMPDEST DUP2 EQ PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x498 DUP1 PUSH2 0x158 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x41C0E1B5 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x77A11F7E EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x6C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x2EB JUMP JUMPDEST PUSH2 0xD7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x86 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x291 JUMP JUMPDEST PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x134 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x37E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x162 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x2BE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x363 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x212 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x318 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24C DUP2 PUSH2 0x41D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x261 DUP2 PUSH2 0x434 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x276 DUP2 PUSH2 0x44B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x28B DUP2 PUSH2 0x44B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A7 JUMPI PUSH2 0x2A6 PUSH2 0x418 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B5 DUP5 DUP3 DUP6 ADD PUSH2 0x23D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D4 JUMPI PUSH2 0x2D3 PUSH2 0x418 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E2 DUP5 DUP3 DUP6 ADD PUSH2 0x252 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x301 JUMPI PUSH2 0x300 PUSH2 0x418 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x30F DUP5 DUP3 DUP6 ADD PUSH2 0x267 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32E JUMPI PUSH2 0x32D PUSH2 0x418 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x33C DUP5 DUP3 DUP6 ADD PUSH2 0x27C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x34E DUP2 PUSH2 0x3D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x35D DUP2 PUSH2 0x40E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x378 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x345 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x393 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x345 JUMP JUMPDEST PUSH2 0x3A0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x345 JUMP JUMPDEST PUSH2 0x3AD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x354 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3CA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x354 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DB DUP3 PUSH2 0x3EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x426 DUP2 PUSH2 0x3D0 JUMP JUMPDEST DUP2 EQ PUSH2 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x43D DUP2 PUSH2 0x3E2 JUMP JUMPDEST DUP2 EQ PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x454 DUP2 PUSH2 0x40E JUMP JUMPDEST DUP2 EQ PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 SSTORE DUP2 KECCAK256 DUP2 PUSH12 0xF28ED322A3BA0D0752BF24EB SAR 0x25 0x1F 0xDE 0xCC 0xC9 0x25 SWAP12 0x1E 0xD5 CALLVALUE 0xB6 SWAP6 PUSH29 0x64736F6C63430008070033000000000000000000000000000000000000 ",
							"sourceMap": "128:811:1:-:0;;;203:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;262:13;247:7;;:29;;;;;;;;;;;;;;;;;;345:10;339:5;;:16;;;;;;;;;;;;;;;;;;203:159;128:811;;7:143:2;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;594:96;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;696:126;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:63;;1186:1;1183;1176:12;1127:63;1074:122;:::o;128:811:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getBalance_133": {
									"entryPoint": 394,
									"id": 133,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@kill_144": {
									"entryPoint": 156,
									"id": 144,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_120": {
									"entryPoint": 215,
									"id": 120,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 594,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 894,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1048,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4234:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "7:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:2",
														"type": ""
													}
												],
												"src": "152:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:2",
														"type": ""
													}
												],
												"src": "295:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "513:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "513:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "571:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "544:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "544:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "481:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "489:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "497:5:2",
														"type": ""
													}
												],
												"src": "440:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "655:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "701:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "703:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "703:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "676:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "685:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "697:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:32:2"
															},
															"nodeType": "YulIf",
															"src": "665:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "794:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "809:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "823:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "813:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "838:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "873:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "884:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "869:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "869:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "893:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "848:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "848:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "838:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "625:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "636:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "648:6:2",
														"type": ""
													}
												],
												"src": "589:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "998:271:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1044:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1046:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1046:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1046:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1019:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1028:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1015:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1015:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1040:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1011:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1011:32:2"
															},
															"nodeType": "YulIf",
															"src": "1008:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1137:125:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1152:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1166:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1156:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1181:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1224:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1235:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1220:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1220:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1244:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1191:28:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1191:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1181:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "968:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "979:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "991:6:2",
														"type": ""
													}
												],
												"src": "924:345:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1341:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1387:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1389:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1389:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1389:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1362:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1371:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1358:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1358:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1383:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1354:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:32:2"
															},
															"nodeType": "YulIf",
															"src": "1351:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1480:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1495:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1509:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1499:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1524:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1559:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1570:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1555:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1555:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1579:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1534:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1534:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1524:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1311:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1322:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1334:6:2",
														"type": ""
													}
												],
												"src": "1275:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1687:274:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1733:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1735:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1735:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1735:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1708:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1717:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1704:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1704:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1729:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1700:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:32:2"
															},
															"nodeType": "YulIf",
															"src": "1697:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1826:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1841:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1855:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1845:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1870:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1916:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1927:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1912:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1912:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1936:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1880:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1880:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1870:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1657:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1668:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1680:6:2",
														"type": ""
													}
												],
												"src": "1610:351:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2032:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2049:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2072:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2054:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2054:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2042:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2042:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2042:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2020:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2027:3:2",
														"type": ""
													}
												],
												"src": "1967:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2156:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2173:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2196:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2178:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2178:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2166:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2166:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2166:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2144:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2151:3:2",
														"type": ""
													}
												],
												"src": "2091:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2313:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2323:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2335:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2346:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2331:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2331:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2323:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2403:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2416:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2427:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2412:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2412:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2359:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2359:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2359:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2285:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2297:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2308:4:2",
														"type": ""
													}
												],
												"src": "2215:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2597:288:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2607:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2619:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2630:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2615:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2615:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2607:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2687:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2700:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2711:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2696:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2696:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2643:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2643:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2643:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2768:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2781:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2792:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2777:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2777:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2724:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2724:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2724:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2850:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2863:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2874:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2859:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2859:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2806:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2806:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2806:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2553:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2565:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2573:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2581:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2592:4:2",
														"type": ""
													}
												],
												"src": "2443:442:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2989:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2999:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3011:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3022:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3007:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3007:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2999:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3079:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3092:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3103:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3088:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3088:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3035:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3035:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3035:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2961:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2973:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2984:4:2",
														"type": ""
													}
												],
												"src": "2891:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3159:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3169:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3185:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3179:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3179:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3169:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3152:6:2",
														"type": ""
													}
												],
												"src": "3119:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3245:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3255:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3284:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3266:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3266:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3255:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3227:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3237:7:2",
														"type": ""
													}
												],
												"src": "3200:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3344:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3354:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3379:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3372:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3372:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3365:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3365:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3354:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3326:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3336:7:2",
														"type": ""
													}
												],
												"src": "3302:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3443:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3453:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3468:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3475:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3464:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3464:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3453:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3425:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3435:7:2",
														"type": ""
													}
												],
												"src": "3398:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3575:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3585:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3596:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3585:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3557:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3567:7:2",
														"type": ""
													}
												],
												"src": "3530:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3702:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3719:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3722:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3712:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3712:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3712:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3613:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3825:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3842:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3845:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3835:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3835:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3835:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3736:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3902:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3959:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3968:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3971:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3961:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3961:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3961:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3925:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3950:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3932:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3932:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3922:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3922:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3915:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3915:43:2"
															},
															"nodeType": "YulIf",
															"src": "3912:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3895:5:2",
														"type": ""
													}
												],
												"src": "3859:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4027:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4081:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4090:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4093:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4083:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4083:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4083:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4050:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4072:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "4057:14:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4057:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4047:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4047:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4040:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4040:40:2"
															},
															"nodeType": "YulIf",
															"src": "4037:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4020:5:2",
														"type": ""
													}
												],
												"src": "3987:116:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4152:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4209:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4218:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4221:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4211:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4211:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4211:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4175:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4200:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4182:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4182:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4172:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4172:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4165:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4165:43:2"
															},
															"nodeType": "YulIf",
															"src": "4162:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4145:5:2",
														"type": ""
													}
												],
												"src": "4109:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806341c0e1b51461004657806377a11f7e14610050578063f8b2cb4f1461006c575b600080fd5b61004e61009c565b005b61006a600480360381019061006591906102eb565b6100d7565b005b61008660048036038101906100819190610291565b61018a565b60405161009391906103b5565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016101349392919061037e565b602060405180830381600087803b15801561014e57600080fd5b505af1158015610162573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018691906102be565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b81526004016101e69190610363565b60206040518083038186803b1580156101fe57600080fd5b505afa158015610212573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102369190610318565b9050919050565b60008135905061024c8161041d565b92915050565b60008151905061026181610434565b92915050565b6000813590506102768161044b565b92915050565b60008151905061028b8161044b565b92915050565b6000602082840312156102a7576102a6610418565b5b60006102b58482850161023d565b91505092915050565b6000602082840312156102d4576102d3610418565b5b60006102e284828501610252565b91505092915050565b60006020828403121561030157610300610418565b5b600061030f84828501610267565b91505092915050565b60006020828403121561032e5761032d610418565b5b600061033c8482850161027c565b91505092915050565b61034e816103d0565b82525050565b61035d8161040e565b82525050565b60006020820190506103786000830184610345565b92915050565b60006060820190506103936000830186610345565b6103a06020830185610345565b6103ad6040830184610354565b949350505050565b60006020820190506103ca6000830184610354565b92915050565b60006103db826103ee565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b610426816103d0565b811461043157600080fd5b50565b61043d816103e2565b811461044857600080fd5b50565b6104548161040e565b811461045f57600080fd5b5056fea26469706673582212208d558120816bf28ed322a3ba0d0752bf24eb1d251fdeccc9259b1ed534b6957c64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x41C0E1B5 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x77A11F7E EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF8B2CB4F EQ PUSH2 0x6C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x2EB JUMP JUMPDEST PUSH2 0xD7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x86 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x291 JUMP JUMPDEST PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x134 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x37E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x162 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x2BE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x363 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x212 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x318 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24C DUP2 PUSH2 0x41D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x261 DUP2 PUSH2 0x434 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x276 DUP2 PUSH2 0x44B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x28B DUP2 PUSH2 0x44B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A7 JUMPI PUSH2 0x2A6 PUSH2 0x418 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B5 DUP5 DUP3 DUP6 ADD PUSH2 0x23D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D4 JUMPI PUSH2 0x2D3 PUSH2 0x418 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E2 DUP5 DUP3 DUP6 ADD PUSH2 0x252 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x301 JUMPI PUSH2 0x300 PUSH2 0x418 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x30F DUP5 DUP3 DUP6 ADD PUSH2 0x267 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32E JUMPI PUSH2 0x32D PUSH2 0x418 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x33C DUP5 DUP3 DUP6 ADD PUSH2 0x27C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x34E DUP2 PUSH2 0x3D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x35D DUP2 PUSH2 0x40E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x378 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x345 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x393 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x345 JUMP JUMPDEST PUSH2 0x3A0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x345 JUMP JUMPDEST PUSH2 0x3AD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x354 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3CA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x354 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DB DUP3 PUSH2 0x3EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x426 DUP2 PUSH2 0x3D0 JUMP JUMPDEST DUP2 EQ PUSH2 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x43D DUP2 PUSH2 0x3E2 JUMP JUMPDEST DUP2 EQ PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x454 DUP2 PUSH2 0x40E JUMP JUMPDEST DUP2 EQ PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 SSTORE DUP2 KECCAK256 DUP2 PUSH12 0xF28ED322A3BA0D0752BF24EB SAR 0x25 0x1F 0xDE 0xCC 0xC9 0x25 SWAP12 0x1E 0xD5 CALLVALUE 0xB6 SWAP6 PUSH29 0x64736F6C63430008070033000000000000000000000000000000000000 ",
							"sourceMap": "128:811:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;802:135;;;:::i;:::-;;544:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;663:114;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;802:135;923:5;;;;;;;;;;;902:28;;;544:113;596:7;;;;;;;;;;:20;;;617:10;636:4;642:7;596:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;544:113;:::o;663:114::-;721:4;743:7;;;;;;;;;;;:17;;;761:8;743:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;736:34;;663:114;;;:::o;7:139:2:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;295:139;;;;:::o;440:143::-;497:5;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;440:143;;;;:::o;589:329::-;648:6;697:2;685:9;676:7;672:23;668:32;665:119;;;703:79;;:::i;:::-;665:119;823:1;848:53;893:7;884:6;873:9;869:22;848:53;:::i;:::-;838:63;;794:117;589:329;;;;:::o;924:345::-;991:6;1040:2;1028:9;1019:7;1015:23;1011:32;1008:119;;;1046:79;;:::i;:::-;1008:119;1166:1;1191:61;1244:7;1235:6;1224:9;1220:22;1191:61;:::i;:::-;1181:71;;1137:125;924:345;;;;:::o;1275:329::-;1334:6;1383:2;1371:9;1362:7;1358:23;1354:32;1351:119;;;1389:79;;:::i;:::-;1351:119;1509:1;1534:53;1579:7;1570:6;1559:9;1555:22;1534:53;:::i;:::-;1524:63;;1480:117;1275:329;;;;:::o;1610:351::-;1680:6;1729:2;1717:9;1708:7;1704:23;1700:32;1697:119;;;1735:79;;:::i;:::-;1697:119;1855:1;1880:64;1936:7;1927:6;1916:9;1912:22;1880:64;:::i;:::-;1870:74;;1826:128;1610:351;;;;:::o;1967:118::-;2054:24;2072:5;2054:24;:::i;:::-;2049:3;2042:37;1967:118;;:::o;2091:::-;2178:24;2196:5;2178:24;:::i;:::-;2173:3;2166:37;2091:118;;:::o;2215:222::-;2308:4;2346:2;2335:9;2331:18;2323:26;;2359:71;2427:1;2416:9;2412:17;2403:6;2359:71;:::i;:::-;2215:222;;;;:::o;2443:442::-;2592:4;2630:2;2619:9;2615:18;2607:26;;2643:71;2711:1;2700:9;2696:17;2687:6;2643:71;:::i;:::-;2724:72;2792:2;2781:9;2777:18;2768:6;2724:72;:::i;:::-;2806;2874:2;2863:9;2859:18;2850:6;2806:72;:::i;:::-;2443:442;;;;;;:::o;2891:222::-;2984:4;3022:2;3011:9;3007:18;2999:26;;3035:71;3103:1;3092:9;3088:17;3079:6;3035:71;:::i;:::-;2891:222;;;;:::o;3200:96::-;3237:7;3266:24;3284:5;3266:24;:::i;:::-;3255:35;;3200:96;;;:::o;3302:90::-;3336:7;3379:5;3372:13;3365:21;3354:32;;3302:90;;;:::o;3398:126::-;3435:7;3475:42;3468:5;3464:54;3453:65;;3398:126;;;:::o;3530:77::-;3567:7;3596:5;3585:16;;3530:77;;;:::o;3736:117::-;3845:1;3842;3835:12;3859:122;3932:24;3950:5;3932:24;:::i;:::-;3925:5;3922:35;3912:63;;3971:1;3968;3961:12;3912:63;3859:122;:::o;3987:116::-;4057:21;4072:5;4057:21;:::i;:::-;4050:5;4047:32;4037:60;;4093:1;4090;4083:12;4037:60;3987:116;:::o;4109:122::-;4182:24;4200:5;4182:24;:::i;:::-;4175:5;4172:35;4162:63;;4221:1;4218;4211:12;4162:63;4109:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "235200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getBalance(address)": "infinite",
								"kill()": "29858",
								"transferFrom(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 128,
									"end": 939,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 128,
									"end": 939,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 128,
									"end": 939,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 203,
									"end": 362,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 203,
									"end": 362,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 203,
									"end": 362,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 203,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 362,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 203,
									"end": 362,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 362,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 203,
									"end": 362,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 203,
									"end": 362,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 362,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 203,
									"end": 362,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 203,
									"end": 362,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 203,
									"end": 362,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 203,
									"end": 362,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 203,
									"end": 362,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 203,
									"end": 362,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 203,
									"end": 362,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 203,
									"end": 362,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 203,
									"end": 362,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 203,
									"end": 362,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 203,
									"end": 362,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 203,
									"end": 362,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 203,
									"end": 362,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 203,
									"end": 362,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 203,
									"end": 362,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 203,
									"end": 362,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 203,
									"end": 362,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 203,
									"end": 362,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 203,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 203,
									"end": 362,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 203,
									"end": 362,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 203,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 203,
									"end": 362,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 203,
									"end": 362,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 203,
									"end": 362,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 262,
									"end": 275,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 247,
									"end": 254,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 247,
									"end": 254,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 247,
									"end": 276,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 247,
									"end": 276,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 247,
									"end": 276,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 247,
									"end": 276,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 247,
									"end": 276,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 247,
									"end": 276,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 247,
									"end": 276,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 247,
									"end": 276,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 247,
									"end": 276,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 247,
									"end": 276,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 247,
									"end": 276,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 247,
									"end": 276,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 247,
									"end": 276,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 247,
									"end": 276,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 247,
									"end": 276,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 247,
									"end": 276,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 247,
									"end": 276,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 247,
									"end": 276,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 345,
									"end": 355,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 339,
									"end": 344,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 339,
									"end": 344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 339,
									"end": 355,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 339,
									"end": 355,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 339,
									"end": 355,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 339,
									"end": 355,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 339,
									"end": 355,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 339,
									"end": 355,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 339,
									"end": 355,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 339,
									"end": 355,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 339,
									"end": 355,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 339,
									"end": 355,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 339,
									"end": 355,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 339,
									"end": 355,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 339,
									"end": 355,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 339,
									"end": 355,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 339,
									"end": 355,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 339,
									"end": 355,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 339,
									"end": 355,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 339,
									"end": 355,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 203,
									"end": 362,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 128,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 128,
									"end": 939,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 401,
									"end": 402,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 482,
									"end": 489,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 416,
									"end": 490,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 416,
									"end": 490,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 372,
									"end": 500,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 631,
									"end": 638,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 678,
									"end": 683,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 649,
									"end": 684,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 649,
									"end": 684,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 733,
									"end": 740,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 815,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 766,
									"end": 771,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 762,
									"end": 816,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 751,
									"end": 816,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 751,
									"end": 816,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1060,
									"end": 1061,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1057,
									"end": 1058,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1050,
									"end": 1062,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1165,
									"end": 1170,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1140,
									"end": 1145,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1137,
									"end": 1172,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1186,
									"end": 1187,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1184,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1176,
									"end": 1188,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 128,
									"end": 939,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 128,
									"end": 939,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 128,
									"end": 939,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 128,
									"end": 939,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 128,
									"end": 939,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 128,
									"end": 939,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 939,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 128,
									"end": 939,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 939,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208d558120816bf28ed322a3ba0d0752bf24eb1d251fdeccc9259b1ed534b6957c64736f6c63430008070033",
									".code": [
										{
											"begin": 128,
											"end": 939,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 128,
											"end": 939,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 128,
											"end": 939,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 128,
											"end": 939,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 128,
											"end": 939,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 939,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 128,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 128,
											"end": 939,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 128,
											"end": 939,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 939,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 939,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 128,
											"end": 939,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 128,
											"end": 939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 128,
											"end": 939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 128,
											"end": 939,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 128,
											"end": 939,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 128,
											"end": 939,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 128,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 128,
											"end": 939,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 128,
											"end": 939,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 939,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 128,
											"end": 939,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 128,
											"end": 939,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 128,
											"end": 939,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 939,
											"name": "PUSH",
											"source": 1,
											"value": "41C0E1B5"
										},
										{
											"begin": 128,
											"end": 939,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 128,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 128,
											"end": 939,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 128,
											"end": 939,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 939,
											"name": "PUSH",
											"source": 1,
											"value": "77A11F7E"
										},
										{
											"begin": 128,
											"end": 939,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 128,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 128,
											"end": 939,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 128,
											"end": 939,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 939,
											"name": "PUSH",
											"source": 1,
											"value": "F8B2CB4F"
										},
										{
											"begin": 128,
											"end": 939,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 128,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 128,
											"end": 939,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 128,
											"end": 939,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 128,
											"end": 939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 128,
											"end": 939,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 939,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 128,
											"end": 939,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 802,
											"end": 937,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 802,
											"end": 937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 802,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 802,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 802,
											"end": 937,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 802,
											"end": 937,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 802,
											"end": 937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 802,
											"end": 937,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 544,
											"end": 657,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 544,
											"end": 657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 544,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 544,
											"end": 657,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 544,
											"end": 657,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 544,
											"end": 657,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 544,
											"end": 657,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 544,
											"end": 657,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 544,
											"end": 657,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 544,
											"end": 657,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 544,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 544,
											"end": 657,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 544,
											"end": 657,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 544,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 544,
											"end": 657,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 657,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 544,
											"end": 657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 544,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 544,
											"end": 657,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 657,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 544,
											"end": 657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 544,
											"end": 657,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 663,
											"end": 777,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 663,
											"end": 777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 663,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 663,
											"end": 777,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 663,
											"end": 777,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 663,
											"end": 777,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 663,
											"end": 777,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 663,
											"end": 777,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 663,
											"end": 777,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 663,
											"end": 777,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 663,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 663,
											"end": 777,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 663,
											"end": 777,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 663,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 663,
											"end": 777,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 663,
											"end": 777,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 663,
											"end": 777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 663,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 663,
											"end": 777,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 663,
											"end": 777,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 663,
											"end": 777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 663,
											"end": 777,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 663,
											"end": 777,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 663,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 663,
											"end": 777,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 663,
											"end": 777,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 663,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 663,
											"end": 777,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 663,
											"end": 777,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 663,
											"end": 777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 663,
											"end": 777,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 663,
											"end": 777,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 663,
											"end": 777,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 663,
											"end": 777,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 663,
											"end": 777,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 663,
											"end": 777,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 663,
											"end": 777,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 802,
											"end": 937,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 802,
											"end": 937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 923,
											"end": 928,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 923,
											"end": 928,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 923,
											"end": 928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 923,
											"end": 928,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 923,
											"end": 928,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 923,
											"end": 928,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 902,
											"end": 930,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 902,
											"end": 930,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 902,
											"end": 930,
											"name": "SELFDESTRUCT",
											"source": 1
										},
										{
											"begin": 544,
											"end": 657,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 544,
											"end": 657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 596,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 596,
											"end": 603,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 596,
											"end": 603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 596,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 596,
											"end": 603,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 596,
											"end": 603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 596,
											"end": 603,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 596,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 596,
											"end": 603,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 596,
											"end": 616,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 596,
											"end": 616,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 596,
											"end": 616,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 617,
											"end": 627,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 636,
											"end": 640,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 642,
											"end": 649,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 596,
											"end": 650,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 596,
											"end": 650,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 596,
											"end": 650,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 596,
											"end": 650,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 596,
											"end": 650,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 596,
											"end": 650,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 596,
											"end": 650,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 596,
											"end": 650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 596,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 596,
											"end": 650,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 650,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 596,
											"end": 650,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 650,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 596,
											"end": 650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 596,
											"end": 650,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 650,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 650,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 596,
											"end": 650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 596,
											"end": 650,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 596,
											"end": 650,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 596,
											"end": 650,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 596,
											"end": 650,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 596,
											"end": 650,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 596,
											"end": 650,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 596,
											"end": 650,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 596,
											"end": 650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 596,
											"end": 650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 544,
											"end": 657,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 544,
											"end": 657,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 663,
											"end": 777,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 663,
											"end": 777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 721,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 743,
											"end": 750,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 743,
											"end": 750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 743,
											"end": 750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 743,
											"end": 750,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 743,
											"end": 750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 743,
											"end": 750,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 743,
											"end": 750,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 743,
											"end": 750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 743,
											"end": 750,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 743,
											"end": 750,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 743,
											"end": 750,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 743,
											"end": 760,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 743,
											"end": 760,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 743,
											"end": 760,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 761,
											"end": 769,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 743,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 736,
											"end": 770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 736,
											"end": 770,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 663,
											"end": 777,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 663,
											"end": 777,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 663,
											"end": 777,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 663,
											"end": 777,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 497,
											"end": 502,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 522,
											"end": 535,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 513,
											"end": 535,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 513,
											"end": 535,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 648,
											"end": 654,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 699,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 694,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 676,
											"end": 683,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 672,
											"end": 695,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 668,
											"end": 700,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 665,
											"end": 784,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 665,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 665,
											"end": 784,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 893,
											"end": 900,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 873,
											"end": 882,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 869,
											"end": 891,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 838,
											"end": 901,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 838,
											"end": 901,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 794,
											"end": 911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 991,
											"end": 997,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1042,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1028,
											"end": 1037,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1015,
											"end": 1038,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1011,
											"end": 1043,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1166,
											"end": 1167,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1235,
											"end": 1241,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1224,
											"end": 1233,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1137,
											"end": 1262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1334,
											"end": 1340,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1385,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1362,
											"end": 1369,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1381,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1386,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1509,
											"end": 1510,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1579,
											"end": 1586,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1555,
											"end": 1577,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1597,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1680,
											"end": 1686,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1731,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1715,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1727,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1700,
											"end": 1732,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1936,
											"end": 1943,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 1934,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1954,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1967,
											"end": 2085,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1967,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2054,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2072,
											"end": 2077,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2054,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2054,
											"end": 2078,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2054,
											"end": 2078,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2054,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2049,
											"end": 2052,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2042,
											"end": 2079,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1967,
											"end": 2085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1967,
											"end": 2085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1967,
											"end": 2085,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2091,
											"end": 2209,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2091,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2178,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2196,
											"end": 2201,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2178,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2178,
											"end": 2202,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2178,
											"end": 2202,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2178,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2176,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2203,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2091,
											"end": 2209,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2091,
											"end": 2209,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2091,
											"end": 2209,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2215,
											"end": 2437,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2215,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2308,
											"end": 2312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2346,
											"end": 2348,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2335,
											"end": 2344,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2331,
											"end": 2349,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2349,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2349,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2359,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2427,
											"end": 2428,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2416,
											"end": 2425,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2412,
											"end": 2429,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2409,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2359,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2359,
											"end": 2430,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2359,
											"end": 2430,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2359,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2437,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2437,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2437,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2437,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2437,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2443,
											"end": 2885,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2443,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2592,
											"end": 2596,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2630,
											"end": 2632,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2619,
											"end": 2628,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 2633,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2633,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2711,
											"end": 2712,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2700,
											"end": 2709,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2696,
											"end": 2713,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2693,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2643,
											"end": 2714,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2643,
											"end": 2714,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2643,
											"end": 2714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2724,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2792,
											"end": 2794,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2781,
											"end": 2790,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2795,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2768,
											"end": 2774,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2724,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2724,
											"end": 2796,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2724,
											"end": 2796,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2724,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2806,
											"end": 2878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2874,
											"end": 2876,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2863,
											"end": 2872,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2859,
											"end": 2877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2856,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2806,
											"end": 2878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2806,
											"end": 2878,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2806,
											"end": 2878,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2806,
											"end": 2878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2443,
											"end": 2885,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2443,
											"end": 2885,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2443,
											"end": 2885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2443,
											"end": 2885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2443,
											"end": 2885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2443,
											"end": 2885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2443,
											"end": 2885,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2891,
											"end": 3113,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2891,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 2988,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3022,
											"end": 3024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3011,
											"end": 3020,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3025,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2999,
											"end": 3025,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2999,
											"end": 3025,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3035,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3103,
											"end": 3104,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3092,
											"end": 3101,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3105,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3085,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3035,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3035,
											"end": 3106,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3035,
											"end": 3106,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3035,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2891,
											"end": 3113,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2891,
											"end": 3113,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2891,
											"end": 3113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2891,
											"end": 3113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2891,
											"end": 3113,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3200,
											"end": 3296,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3200,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3237,
											"end": 3244,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3266,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3284,
											"end": 3289,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3266,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3266,
											"end": 3290,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3266,
											"end": 3290,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3266,
											"end": 3290,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3296,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3296,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3296,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3296,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3302,
											"end": 3392,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3302,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3336,
											"end": 3343,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3379,
											"end": 3384,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3372,
											"end": 3385,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3386,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3354,
											"end": 3386,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3354,
											"end": 3386,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3302,
											"end": 3392,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3302,
											"end": 3392,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3302,
											"end": 3392,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3302,
											"end": 3392,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3398,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3398,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3435,
											"end": 3442,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3468,
											"end": 3473,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3464,
											"end": 3518,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3518,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3518,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3398,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3398,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3398,
											"end": 3524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3398,
											"end": 3524,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3530,
											"end": 3607,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3530,
											"end": 3607,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3567,
											"end": 3574,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3596,
											"end": 3601,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3585,
											"end": 3601,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3585,
											"end": 3601,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3530,
											"end": 3607,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3530,
											"end": 3607,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3530,
											"end": 3607,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3530,
											"end": 3607,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3736,
											"end": 3853,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3736,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 3846,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3842,
											"end": 3843,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3847,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3859,
											"end": 3981,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3859,
											"end": 3981,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3932,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3950,
											"end": 3955,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3932,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3932,
											"end": 3956,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3932,
											"end": 3956,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3932,
											"end": 3956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3925,
											"end": 3930,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3922,
											"end": 3957,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3912,
											"end": 3975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3912,
											"end": 3975,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3971,
											"end": 3972,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3968,
											"end": 3969,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3961,
											"end": 3973,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3912,
											"end": 3975,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3912,
											"end": 3975,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3859,
											"end": 3981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3859,
											"end": 3981,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3987,
											"end": 4103,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3987,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4072,
											"end": 4077,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4057,
											"end": 4078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 4057,
											"end": 4078,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4057,
											"end": 4078,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4057,
											"end": 4078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4050,
											"end": 4055,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4047,
											"end": 4079,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4037,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4037,
											"end": 4097,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4093,
											"end": 4094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4090,
											"end": 4091,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4083,
											"end": 4095,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4037,
											"end": 4097,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4037,
											"end": 4097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4103,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4103,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4109,
											"end": 4231,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4109,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4182,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4200,
											"end": 4205,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4182,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4182,
											"end": 4206,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4182,
											"end": 4206,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4182,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4175,
											"end": 4180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4172,
											"end": 4207,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4162,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4162,
											"end": 4225,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4221,
											"end": 4222,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4218,
											"end": 4219,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4211,
											"end": 4223,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4162,
											"end": 4225,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4162,
											"end": 4225,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4109,
											"end": 4231,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4109,
											"end": 4231,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getBalance(address)": "f8b2cb4f",
							"kill()": "41c0e1b5",
							"transferFrom(uint256)": "77a11f7e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/17_ReceiveTokenContract.sol\":\"ReceiveTokenContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"contracts/17_ReceiveTokenContract.sol\":{\"keccak256\":\"0xb1ce2cd4e0da90f0dc1bd019098255e4303bc5e3eea57bd3d8cc33a8f8afc256\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://075b90508128fec744fdc21d1a6b82146d3eb6897ea2c97b49152a9b965c8098\",\"dweb:/ipfs/QmcFLu65bMhxwzayTckoTDDFtUVnNw1M6PwuL1zLgWPhPK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 83,
								"contract": "contracts/17_ReceiveTokenContract.sol:ReceiveTokenContract",
								"label": "myToken",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 85,
								"contract": "contracts/17_ReceiveTokenContract.sol:ReceiveTokenContract",
								"label": "owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"contracts/17_ReceiveTokenContract.sol": {
				"ast": {
					"absolutePath": "contracts/17_ReceiveTokenContract.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"ReceiveTokenContract": [
							145
						]
					},
					"id": 146,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 146,
							"sourceUnit": 78,
							"src": "70:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 145,
							"linearizedBaseContracts": [
								145
							],
							"name": "ReceiveTokenContract",
							"nameLocation": "137:20:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 83,
									"mutability": "mutable",
									"name": "myToken",
									"nameLocation": "170:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 145,
									"src": "163:14:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 82,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 81,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "163:6:1"
										},
										"referencedDeclaration": 77,
										"src": "163:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 85,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "191:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 145,
									"src": "183:13:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 84,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "183:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "237:125:1",
										"statements": [
											{
												"expression": {
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 90,
														"name": "myToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "247:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 92,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 87,
																"src": "262:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 91,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "255:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 93,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "255:21:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "247:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 95,
												"nodeType": "ExpressionStatement",
												"src": "247:29:1"
											},
											{
												"expression": {
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 96,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "339:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 97,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "345:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 98,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "345:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "339:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "339:16:1"
											}
										]
									},
									"id": 102,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "223:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "215:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "215:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "214:23:1"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "237:0:1"
									},
									"scope": 145,
									"src": "203:159:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "586:71:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 110,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "617:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "617:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 114,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "636:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ReceiveTokenContract_$145",
																		"typeString": "contract ReceiveTokenContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ReceiveTokenContract_$145",
																		"typeString": "contract ReceiveTokenContract"
																	}
																],
																"id": 113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "628:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 112,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "628:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "628:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 116,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "642:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 107,
															"name": "myToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "596:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "596:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "596:54:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "596:54:1"
											}
										]
									},
									"functionSelector": "77a11f7e",
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "553:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "571:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "566:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "566:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "565:14:1"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:0:1"
									},
									"scope": 145,
									"src": "544:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "726:51:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 129,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "761:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 127,
															"name": "myToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "743:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "743:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "743:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 126,
												"id": 131,
												"nodeType": "Return",
												"src": "736:34:1"
											}
										]
									},
									"functionSelector": "f8b2cb4f",
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "672:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "691:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "683:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "682:18:1"
									},
									"returnParameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "721:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "721:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "720:6:1"
									},
									"scope": 145,
									"src": "663:114:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 143,
										"nodeType": "Block",
										"src": "824:113:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 139,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 85,
																	"src": "923:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "915:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 137,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "915:8:1",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "915:14:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 136,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967275,
														"src": "902:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "902:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "902:28:1"
											}
										]
									},
									"functionSelector": "41c0e1b5",
									"id": 144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "kill",
									"nameLocation": "811:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "815:2:1"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "824:0:1"
									},
									"scope": 145,
									"src": "802:135:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 146,
							"src": "128:811:1",
							"usedErrors": []
						}
					],
					"src": "37:902:1"
				},
				"id": 1
			}
		}
	}
}